{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/reactstrap/es/CardHeader.js","views/Reports/api.js","../node_modules/reactstrap/es/CardFooter.js","views/Reports/api/branch_summary.js","views/Reports/api/risk_trigger.js","views/Reports/api/branch_categorization.js","views/Reports/api/ho_summary.js","../node_modules/reactstrap/es/Table.js","views/Reports/util/getDates.js","../node_modules/reactstrap/es/FormGroup.js","../node_modules/@linways/table-to-excel/dist sync","views/Branches/api.js","views/Reports/RiskTrigger.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","propTypes","tag","tagPropType","className","PropTypes","string","cssModule","object","CardHeader","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","url","urlData","log","require","branchSummary","downloadBranchSummary","saveBranchSummary","getRiskTriggers","getRiskTriggerData","branchCategorization","downloadBranchCategorization","saveBranchCategorization","hoSummary","getReportOutputs","options","a","async","server","get","params","json","data","getAllRiskRegister","getAuditLog","callback","then","catch","err","console","error","saveGrading","post","CardFooter","JSON","stringify","riskTrigger","riskTriggerData","size","bordered","bool","borderless","striped","dark","hover","responsive","oneOfType","responsiveTag","innerRef","func","Table","ResponsiveTag","table","ref","responsiveClassName","bs2ad","ad2bs","moment","QUARTER_ONE","QUARTER_TWO","QUARTER_THREE","QUARTER_FOUR","getFormattedDate","ad","year","month","day","format","getStartQuarter","bs","en","quarter","getQuarter","getQuarterByAD","getBSDate","children","node","row","check","inline","disabled","FormGroup","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","urlBranch","urlProvince","getBranches","getProvinces","editProvinceBranch","put","RiskTriggerReport","state","branchId","startDate","riskTriggers","branches","handleChange","input","target","name","setState","handleDateChange","bsDate","length","adDate","downloadReport","TableToExcel","convert","document","getElementById","this","alert","p","permissions","Fragment","md","addonType","onChange","type","maxLength","minLength","placeholder","for","map","d","i","isApprover","isAdmin","rowSpan","colSpan","splittedValue","relatedStaff","split","riskAreaParticular","remarks","color","onClick","Component"],"mappings":"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","file":"static/js/14.17e72edd.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import { server } from \"../../config/server\";\r\nconst url = \"/report\";\r\nconst urlData = \"/risk-register-all\";\r\nconst log = \"/audit-log\";\r\nconst {\r\n  branchSummary,\r\n  downloadBranchSummary,\r\n  saveBranchSummary\r\n} = require(\"./api/branch_summary\");\r\nconst { getRiskTriggers, getRiskTriggerData } = require(\"./api/risk_trigger\");\r\nconst {\r\n  branchCategorization,\r\n  downloadBranchCategorization,\r\n  saveBranchCategorization\r\n} = require(\"./api/branch_categorization\");\r\nconst { hoSummary } = require(\"./api/ho_summary\");\r\n\r\nasync function getReportOutputs(options) {\r\n  const json = await server.get(`${url}/report-outputs`, {\r\n    params: options\r\n  });\r\n  return json.data;\r\n}\r\n\r\nasync function getAllRiskRegister(options) {\r\n  const json = await server.get(`${urlData}`, { params: options });\r\n  return json.data;\r\n}\r\n\r\nfunction getAuditLog(callback) {\r\n  server\r\n    .get(`${log}`)\r\n    .then(function(json) {\r\n      // console.log(json.data);\r\n      return callback(null, json.data);\r\n    })\r\n    .catch(function(err) {\r\n      console.error(\"Error getting data from all risk Register!\");\r\n    });\r\n}\r\n\r\nasync function saveGrading(data, options) {\r\n  const json = await server.post(`${url}/grading`, {\r\n    ...options,\r\n    data: data\r\n  });\r\n  return json.data;\r\n}\r\n\r\nexport {\r\n  getAllRiskRegister,\r\n  getAuditLog,\r\n  getReportOutputs,\r\n  // BRANCH SUMMARY\r\n  branchSummary,\r\n  downloadBranchSummary,\r\n  saveBranchSummary,\r\n  // BRANCH CATEGORIZATION\r\n  branchCategorization,\r\n  downloadBranchCategorization,\r\n  saveBranchCategorization,\r\n  // HO Summary\r\n  hoSummary,\r\n  //saving report\r\n  saveGrading,\r\n  //Risk Trigger\r\n  getRiskTriggers,\r\n  getRiskTriggerData\r\n};\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardFooter = function CardFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-footer'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardFooter.propTypes = propTypes;\nCardFooter.defaultProps = defaultProps;\nexport default CardFooter;","import { server } from \"../../../config/server\";\r\nconst url = \"/report\";\r\n\r\n/**\r\n * \r\n * @param {Object} options\r\n * @param {Number} options.branchId   - Branch ID whose report is to be calculated\r\n * @param {Number} options.frequency  - QUARTERLY, HALF_YEARLY, YEARLY (in months)\r\n * @param {String} options.status     - DRAFT, PENDING, UNAPPROVED, APPROVED (Risk Register status)\r\n * @param {String} options.mergeType  - avg, min, max (Merge Function Types)\r\n * @param {Date}   options.startDate    - Base date to calculate the report Data\r\n * \r\n */\r\nasync function branchSummary(options) {\r\n    const json = await server.get(\r\n        `${url}/branch-summary`,\r\n        {\r\n            params: options\r\n        }\r\n    );\r\n    return json.data;\r\n}\r\n\r\nasync function downloadBranchSummary(data) {\r\n    const json = await server.post(\r\n        `${url}/branch-summary/download`,\r\n        JSON.stringify(data)\r\n    );\r\n    return json.data;\r\n}\r\n\r\nasync function saveBranchSummary(data) {\r\n    const json = await server.post(\r\n        `${url}/branch-summary/save`,\r\n        JSON.stringify(data)\r\n    );\r\n    return json.data;\r\n}\r\n\r\nexport {\r\n    branchSummary,\r\n    downloadBranchSummary,\r\n    saveBranchSummary\r\n}\r\n","import { server } from \"../../../config/server\";\r\nconst riskTrigger = \"report/risk-trigger\";\r\nconst riskTriggerData = \"report/risk-trigger/data\";\r\n\r\nasync function getRiskTriggerData(options) {\r\n    return server.get(`${riskTriggerData}`, { params: options });\r\n}\r\n\r\nfunction getRiskTriggers(callback) {\r\n    server\r\n        .get(`${riskTrigger}`)\r\n        .then(function (json) {\r\n            callback(null, json.data);\r\n        })\r\n        .catch(function (err) {\r\n            callback(err);\r\n        });\r\n}\r\n\r\nexport {\r\n    getRiskTriggers,\r\n    getRiskTriggerData,\r\n}","import { server } from \"../../../config/server\";\r\nconst url = \"/report\";\r\n\r\n/**\r\n * \r\n * @param {Object} options\r\n * @param {Number} options.branchId   - Branch ID whose report is to be calculated\r\n * @param {Date}   options.thisQuarter    - Base date to calculate the report Data\r\n * \r\n */\r\nasync function branchCategorization(options) {\r\n    const json = await server.get(\r\n        `${url}/branch-categorization`,\r\n        {\r\n            params: options\r\n        }\r\n    );\r\n    return json.data;\r\n}\r\n\r\nasync function downloadBranchCategorization(data) {\r\n    const json = await server.post(\r\n        `${url}/branch-categorization/download`,\r\n        JSON.stringify(data)\r\n    );\r\n    return json.data;\r\n}\r\n\r\nasync function saveBranchCategorization(data) {\r\n    const json = await server.post(\r\n        `${url}/branch-categorization/save`,\r\n        JSON.stringify(data)\r\n    );\r\n    return json.data;\r\n}\r\n\r\nexport {\r\n    branchCategorization,\r\n    downloadBranchCategorization,\r\n    saveBranchCategorization,\r\n}","import { server } from \"../../../config/server\";\r\nconst url = \"/report\";\r\n\r\n/**\r\n * \r\n * @param {Object} options\r\n * @param {Number} options.frequency  - QUARTERLY, HALF_YEARLY, YEARLY (in months)\r\n * @param {String} options.status     - DRAFT, PENDING, UNAPPROVED, APPROVED (Risk Register status)\r\n * @param {Date}   options.startDate  - Base date to calculate the report Data\r\n * \r\n */\r\nasync function hoSummary(options) {\r\n    const json = await server.get(\r\n        `${url}/ho-summary`,\r\n        {\r\n            params: options\r\n        }\r\n    );\r\n    return json.data;\r\n}\r\n\r\nexport {\r\n    hoSummary\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  size: PropTypes.string,\n  bordered: PropTypes.bool,\n  borderless: PropTypes.bool,\n  striped: PropTypes.bool,\n  dark: PropTypes.bool,\n  hover: PropTypes.bool,\n  responsive: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: tagPropType,\n  responsiveTag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.object])\n};\nvar defaultProps = {\n  tag: 'table',\n  responsiveTag: 'div'\n};\n\nvar Table = function Table(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      size = props.size,\n      bordered = props.bordered,\n      borderless = props.borderless,\n      striped = props.striped,\n      dark = props.dark,\n      hover = props.hover,\n      responsive = props.responsive,\n      Tag = props.tag,\n      ResponsiveTag = props.responsiveTag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"size\", \"bordered\", \"borderless\", \"striped\", \"dark\", \"hover\", \"responsive\", \"tag\", \"responsiveTag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'table', size ? 'table-' + size : false, bordered ? 'table-bordered' : false, borderless ? 'table-borderless' : false, striped ? 'table-striped' : false, dark ? 'table-dark' : false, hover ? 'table-hover' : false), cssModule);\n  var table = React.createElement(Tag, _extends({}, attributes, {\n    ref: innerRef,\n    className: classes\n  }));\n\n  if (responsive) {\n    var responsiveClassName = mapToCssModules(responsive === true ? 'table-responsive' : \"table-responsive-\" + responsive, cssModule);\n    return React.createElement(ResponsiveTag, {\n      className: responsiveClassName\n    }, table);\n  }\n\n  return table;\n};\n\nTable.propTypes = propTypes;\nTable.defaultProps = defaultProps;\nexport default Table;","const bs2ad = require('ad-bs-converter').bs2ad;\r\nconst ad2bs = require('ad-bs-converter').ad2bs;\r\nconst moment = require('moment');\r\n\r\nconst QUARTER_ONE = \"/04/01\";\r\nconst QUARTER_TWO = \"/07/01\";\r\nconst QUARTER_THREE = \"/10/01\";\r\nconst QUARTER_FOUR = \"/01/01\";\r\n\r\n/**\r\n * \r\n * @param {Object} ad - AD date object converted from bs date using ad-bs-converter \r\n * @returns {String} Well formatted AD Date in YYYY-MM-DD\r\n */\r\nconst getFormattedDate = (ad) => {\r\n    const year = ad.year;\r\n    const month = ad.month;\r\n    const day = ad.day;\r\n    return moment(year + \" \" + month + \" \" + day, \"YYYY MM DD\").format('YYYY-MM-DD');\r\n}\r\n\r\n/**\r\n * @returns Quarter start date in AD of this running month\r\n */\r\nconst getStartQuarter = () => {\r\n    const bs = ad2bs(moment().format(\"YYYY/MM/DD\"));\r\n    const year = bs.en.year;\r\n    const quarter = getQuarter(bs);\r\n    return getFormattedDate(bs2ad(year + quarter));\r\n}\r\n\r\n/**\r\n * \r\n * @param {Date} ad - Well formatted AD Date in YYYY-MM-DD\r\n * @returns Returns in which quarter does the date lies\r\n */\r\nconst getQuarterByAD = (ad) => {\r\n    const bs = ad2bs(moment(ad).format(\"YYYY/MM/DD\"));\r\n    return getQuarter(bs);\r\n}\r\n\r\n/**\r\n * \r\n * @param {Object} bs - Object of BS date from ad-bs-converter\r\n * @returns Returns in which quarter does the date lies\r\n */\r\nconst getQuarter = (bs) => {\r\n    const month = bs.en.month;\r\n    if (month >= 10) {\r\n        return QUARTER_THREE;\r\n    } else if (month >= 7) {\r\n        return QUARTER_TWO;\r\n    } else if (month >= 4) {\r\n        return QUARTER_ONE;\r\n    } else {\r\n        return QUARTER_FOUR;\r\n    }\r\n}\r\n\r\n/**\r\n * \r\n * @param {Date} ad Well formatted (YYYY-MM-DD) AD Date\r\n * @returns BS Date object in `en`\r\n */\r\nconst getBSDate = (ad) => {\r\n    const bs = ad2bs(moment(ad).format(\"YYYY/MM/DD\"));\r\n    return bs.en;\r\n}\r\n\r\nexport {\r\n    getStartQuarter,\r\n    getBSDate,\r\n    getQuarterByAD,\r\n    getFormattedDate,\r\n    QUARTER_ONE,\r\n    QUARTER_TWO,\r\n    QUARTER_THREE,\r\n    QUARTER_FOUR,\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 607;","import { server } from \"../../config/server\";\r\n\r\nconst urlBranch = \"/branches\";\r\nconst urlProvince = \"/provinces\";\r\n\r\nfunction getBranches(callback) {\r\n  server\r\n    .get(`${urlBranch}`)\r\n    .then(function(json) {\r\n      callback(null, json.data);\r\n    })\r\n    .catch(function(err) {\r\n      callback(err);\r\n    });\r\n}\r\n\r\nfunction getProvinces(callback) {\r\n  server\r\n    .get(`${urlProvince}`)\r\n    .then(function(json) {\r\n      callback(null, json.data);\r\n    })\r\n    .catch(function(err) {\r\n      callback(err);\r\n    });\r\n}\r\n\r\nfunction editProvinceBranch(data, callback) {\r\n  server\r\n    .put(`${urlBranch}`, data)\r\n    .then(function(json) {\r\n      callback(null, json.data);\r\n    })\r\n    .catch(function(err) {\r\n      callback(err);\r\n    });\r\n}\r\n\r\nexport { getBranches, getProvinces, editProvinceBranch };\r\n","import React, { Component } from \"react\";\r\nimport { getRiskTriggerData, getRiskTriggers } from \"./api\";\r\nimport { getBranches } from \"../Branches/api\";\r\nimport {\r\n  Table,\r\n  Label,\r\n  FormGroup,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  InputGroupAddon,\r\n  InputGroup,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button\r\n} from \"reactstrap\";\r\nimport {\r\n  getStartQuarter,\r\n  getBSDate,\r\n  getQuarterByAD,\r\n  QUARTER_ONE,\r\n  QUARTER_TWO,\r\n  QUARTER_THREE,\r\n  QUARTER_FOUR,\r\n  getFormattedDate\r\n} from \"./util/getDates\";\r\nimport { bs2ad } from \"ad-bs-converter\";\r\nimport TableToExcel from \"@linways/table-to-excel\";\r\n\r\nexport default class RiskTriggerReport extends Component {\r\n  state = {\r\n    options: {\r\n      branchId: \"\",\r\n      riskTrigger: \"Staff Negligence\",\r\n      startDate: getStartQuarter()\r\n    },\r\n    riskTriggerData: [],\r\n    riskTriggers: [],\r\n    branches: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    getRiskTriggerData(this.state.options)\r\n      .then(({ data }) => {\r\n        this.setState({ riskTriggerData: data });\r\n      })\r\n      .catch(err => {});\r\n    getRiskTriggers((err, riskTriggers) => {\r\n      if (err) alert(\"some error occurred!\");\r\n\r\n      this.setState({ riskTriggers: riskTriggers });\r\n    });\r\n    getBranches((err, branches) => {\r\n      if (err) alert(\"some error occurred!\");\r\n      this.setState({ branches: branches });\r\n    });\r\n  }\r\n\r\n  handleChange = async ({ target: input }) => {\r\n    const options = { ...this.state.options };\r\n    options[input.name] = input.value;\r\n    await this.setState({ options });\r\n    await getRiskTriggerData(this.state.options)\r\n      .then(({ data }) => {\r\n        this.setState({ riskTriggerData: data });\r\n      })\r\n      .catch(err => {});\r\n  };\r\n\r\n  handleDateChange = async e => {\r\n    const value = e.target.value;\r\n    let bsDate = null;\r\n    switch (e.target.name) {\r\n      case \"quarter\":\r\n        const year = getBSDate(this.state.options.startDate).year;\r\n        bsDate = year + value;\r\n        break;\r\n      case \"year\":\r\n        if (value.length === 4) {\r\n          const quarter = getQuarterByAD(this.state.options.startDate);\r\n          bsDate = value + quarter;\r\n        }\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    const adDate = bsDate\r\n      ? getFormattedDate(bs2ad(bsDate))\r\n      : this.state.options.startDate;\r\n    const options = this.state.options;\r\n    options.startDate = adDate;\r\n    await this.setState({\r\n      options\r\n    });\r\n    await getRiskTriggerData(this.state.options)\r\n      .then(({ data }) => {\r\n        this.setState({ riskTriggerData: data });\r\n      })\r\n      .catch(err => {});\r\n  };\r\n  downloadReport = () => {\r\n    TableToExcel.convert(document.getElementById(\"risk-trigger\"), {\r\n      name: \"risk-trigger.xlsx\"\r\n    });\r\n  };\r\n  render() {\r\n    const { riskTriggerData, riskTriggers, branches } = this.state;\r\n    const p = this.props.permissions;\r\n    return (\r\n      <React.Fragment>\r\n        <Card>\r\n          <CardHeader></CardHeader>\r\n          <CardBody>\r\n            <Row>\r\n              <Col md={4}>\r\n                <Label>Quarter Start Date (YYYY/MM/DD)</Label>\r\n                <InputGroup className=\"mb-2\">\r\n                  <InputGroupAddon addonType=\"prepend\">\r\n                    <Input\r\n                      onChange={this.handleDateChange}\r\n                      value={getQuarterByAD(this.state.options.startDate)}\r\n                      type=\"select\"\r\n                      name=\"quarter\"\r\n                      className=\"font-italic\"\r\n                    >\r\n                      <option value=\"\">Select Quarter</option>\r\n                      <option value={QUARTER_ONE}>First Quarter</option>\r\n                      <option value={QUARTER_TWO}>Second Quarter</option>\r\n                      <option value={QUARTER_THREE}>Third Quarter</option>\r\n                      <option value={QUARTER_FOUR}>Fourth Quarter</option>\r\n                    </Input>\r\n                  </InputGroupAddon>\r\n                  <Input\r\n                    type=\"number\"\r\n                    maxLength=\"4\"\r\n                    minLength=\"4\"\r\n                    className=\"font-italic\"\r\n                    placeholder=\"Year\"\r\n                    name=\"year\"\r\n                    onChange={this.handleDateChange}\r\n                    value={getBSDate(this.state.options.startDate).year}\r\n                  />\r\n                </InputGroup>\r\n              </Col>\r\n              <Col>\r\n                {\" \"}\r\n                <FormGroup>\r\n                  <Label for=\"trigger\">Risk Trigger</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskTrigger\"\r\n                    id=\"trigger\"\r\n                    onChange={this.handleChange}\r\n                  >\r\n                    <option value=\"\">---Please Select ---</option>\r\n                    {riskTriggers.map((d, i) => {\r\n                      return <option key={i}>{d.name}</option>;\r\n                    })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n               \r\n                {p.isApprover || p.isAdmin ? (\r\n                  <FormGroup>\r\n                    <Label for=\"branches\">Branch</Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      name=\"branchId\"\r\n                      id=\"branches\"\r\n                      onChange={this.handleChange}\r\n                    >\r\n                      <option value=\"\">---Your Branch---</option>\r\n\r\n                      {branches.map(branches => {\r\n                        return (\r\n                          <option key={branches.id} value={branches.id}>\r\n                            {branches.name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                    </Input>\r\n                  </FormGroup>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </Col>\r\n            </Row>\r\n\r\n            <Table bordered striped id=\"risk-trigger\">\r\n              <thead>\r\n                <tr>\r\n                  <th rowSpan=\"2\" className=\"text-center\">\r\n                    Particular{\" \"}\r\n                  </th>\r\n                  <th colSpan=\"2\" className=\"text-center\">\r\n                    {\" \"}\r\n                    Related Staffs\r\n                  </th>\r\n                  <th rowSpan=\"2\" className=\"text-center\">\r\n                    Remarks\r\n                  </th>\r\n                </tr>\r\n                <tr>\r\n                  <th className=\"text-center\">Inputer</th>\r\n                  <th className=\"text-center\">Authorizer</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {riskTriggerData.map(data => {\r\n                  var splittedValue = data.relatedStaff.split(\"/\");\r\n                  return (\r\n                    <tr key={data.riskAreaParticular + data.remarks}>\r\n                      <td>{data.riskAreaParticular}</td>\r\n                      <td>{splittedValue[0] ? splittedValue[0] : \"\"}</td>\r\n                      <td>{splittedValue[1] ? splittedValue[1] : \"\"}</td>\r\n                      <td>{data.remarks}</td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </CardBody>\r\n          <CardFooter>\r\n            <Button className=\"mx-2\" color=\"info\" onClick={this.downloadReport}>\r\n              <i className=\"fa fa-download text-white\" />\r\n            </Button>\r\n          </CardFooter>\r\n        </Card>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n"],"sourceRoot":""}