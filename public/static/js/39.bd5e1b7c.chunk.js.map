{"version":3,"sources":["util/form.js","util/api.js","views/Users/api.js","views/Users/AddUser.js"],"names":["getFormData","event","formData","form","target","i","length","element","elements","name","value","type","checked","loadDataInsideForm","object","Object","keys","forEach","key","document","getElementById","getAll","callback","server","get","then","json","data","catch","err","url","getUsers","getLdapUsers","getUser","id","addUser","user","post","JSON","stringify","editUser","put","deleteUser","delete","AddUser","state","users","roles","selectedBranch","branches","departments","selectedOption","selectedOptions","handleBranchChange","setState","handleUserChange","distinguishedName","filter","u","k","handleSubmit","e","preventDefault","branchId","props","history","push","window","alert","this","_isMounted","map","label","displayName","d","className","xl","onSubmit","htmlFor","onChange","options","row","xs","placeholder","userPrincipalName","readOnly","telephoneNumber","sAMAccountName","givenName","sn","required","role","index","department","padding","level","size","color","Component"],"mappings":"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","file":"static/js/39.bd5e1b7c.chunk.js","sourcesContent":["const getFormData = event => {\r\n    const formData = {};\r\n    const form = event.target;\r\n    for (let i = 0; i < form.length; i++) {\r\n        const element = form.elements[i];\r\n        const name = element.name;\r\n        const value = element.value;\r\n        const type = element.type;\r\n        if (value) {\r\n            switch (type) {\r\n                case \"checkbox\":\r\n                    formData[name] = element.checked;\r\n                    break;\r\n                default:\r\n                    formData[name] = value;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    return formData;\r\n}\r\n\r\nconst loadDataInsideForm = (object) => {\r\n    if (!object) return;\r\n    const keys = Object.keys(object);\r\n    keys.forEach(key => {\r\n        const value = object[key];\r\n        const element = document.getElementById(key);\r\n        if (element) {\r\n            element.checked = value;\r\n            element.value = value;\r\n        }\r\n    });\r\n}\r\n\r\nexport {\r\n    getFormData,\r\n    loadDataInsideForm,\r\n}","import { server } from '../config/server';\r\n\r\nconst getAll = (callback) => {\r\n    server.get('/all')\r\n        .then(json => {\r\n            callback(null, json.data);\r\n        })\r\n        .catch(err => {\r\n            callback(err);\r\n        })\r\n}\r\n\r\n\r\nexport {\r\n    getAll\r\n}","import { server } from \"../../config/server\";\r\n\r\nconst url = \"/users\";\r\n\r\n\r\n/**\r\n *\r\n * @param {Function} callback\r\n */\r\nfunction getUsers(callback) {\r\n  server\r\n    .get(`${url}`)\r\n    .then(function(json) {\r\n      callback(null, json.data);\r\n    })\r\n    .catch(function(err) {\r\n      callback(err);\r\n    });\r\n}\r\n\r\nfunction getLdapUsers(callback) {\r\n  server\r\n    .get(`${url}/ldap`)\r\n    .then(function(json) {\r\n      callback(null, json.data);\r\n    })\r\n    .catch(function(err) {\r\n      callback(err);\r\n    });\r\n}\r\n\r\nfunction getUser(id, callback) {\r\n  server\r\n    .get(`${url}/${id}`)\r\n    .then(function(json) {\r\n      callback(null, json.data);\r\n    })\r\n    .catch(function(err) {\r\n      callback(err);\r\n    });\r\n}\r\n\r\nfunction addUser(user, callback) {\r\n  server\r\n    .post(`${url}`, JSON.stringify(user))\r\n    .then(function(json) {\r\n      callback(null, json.data);\r\n    })\r\n    .catch(function(err) {\r\n      callback(err);\r\n    });\r\n}\r\n\r\nfunction editUser(user, callback) {\r\n  server\r\n    .put(`${url}/${user.id}`, JSON.stringify(user))\r\n    .then(function(json) {\r\n      callback(null, json.data);\r\n    })\r\n    .catch(function(err) {\r\n      callback(err);\r\n    });\r\n}\r\n\r\nfunction deleteUser(id, callback) {\r\n  server\r\n    .delete(`${url}/${id}`)\r\n    .then(function(json) {\r\n      callback(null, json.data);\r\n    })\r\n    .catch(function(err) {\r\n      callback(err);\r\n    });\r\n}\r\n\r\nexport {\r\n  getUsers,\r\n  getLdapUsers,\r\n  getUser,\r\n  addUser,\r\n  editUser,\r\n  deleteUser,\r\n\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardFooter,\r\n  Form,\r\n  Button,\r\n  Col,\r\n  Row,\r\n  FormGroup,\r\n  Input,\r\n  Label\r\n} from \"reactstrap\";\r\nimport Select from \"react-select\";\r\nimport { getAll } from \"../../util/api\";\r\nimport { getFormData } from \"../../util/form\";\r\nimport { getLdapUsers, addUser } from \"./api\";\r\n\r\nclass AddUser extends Component {\r\n  state = {\r\n    users: [],\r\n    user: {},\r\n    roles: [],\r\n    selectedBranch: null,\r\n    branches: [],\r\n    departments: [],\r\n    selectedOption: {},\r\n    selectedOptions: []\r\n  };\r\n\r\n  handleBranchChange = selectedBranch => {\r\n    const branchId = selectedBranch.value;\r\n    if (branchId) {\r\n      this.setState({ selectedBranch });\r\n    }\r\n  };\r\n\r\n  handleUserChange = selectedOption => {\r\n    const distinguishedName = selectedOption.value;\r\n    if (distinguishedName) {\r\n      this.setState({ selectedOption });\r\n      const user = this.state.users.filter(u =>\r\n        u.distinguishedName === distinguishedName ? 1 : 0\r\n      )[0];\r\n      this.setState({ user: user ? user : {} });\r\n    } else {\r\n      const keys = Object.keys(this.state.user);\r\n      const user = {};\r\n      keys.forEach(k => (user[k] = \"\"));\r\n      this.setState({ user: user });\r\n    }\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const formData = getFormData(e);\r\n    if (formData.branchId) {\r\n      const user = {\r\n        ...this.state.user,\r\n        ...formData,\r\n      };\r\n      addUser(user, (err, json) => {\r\n        if (err) return;\r\n        if (json) {\r\n          this.props.history.push(\"/users\");\r\n        }\r\n      });\r\n    } else {\r\n      window.alert(\"Please select a branch\")\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this._isMounted = true;\r\n    getLdapUsers((err, users) => {\r\n      if (err) return;\r\n      const selectedOptions = users.map(u => {\r\n        return {\r\n          value: u.distinguishedName,\r\n          label: u.displayName\r\n        };\r\n      });\r\n      this.setState({\r\n        users: users,\r\n        selectedOptions: selectedOptions\r\n      });\r\n    });\r\n    getAll((err, data) => {\r\n      if (err) return;\r\n      const branches = data.branches.map(d => {\r\n        return {\r\n          value: d.id,\r\n          label: d.name\r\n        }\r\n      });\r\n      this.setState({\r\n        roles: data.roles,\r\n        branches: branches,\r\n        departments: data.departments\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { selectedOptions, branches } = this.state;\r\n    return (\r\n      <div className=\"animated fadeIn\">\r\n        <Row>\r\n          <Col xl={12}>\r\n            <Form onSubmit={this.handleSubmit}>\r\n              <Card>\r\n                <CardHeader>\r\n                  <i className=\"fa fa-user\"></i> AD Users\r\n                </CardHeader>\r\n                <CardBody className=\"table-responsive\">\r\n\r\n                  <FormGroup>\r\n                    <Label htmlFor=\"user\">User</Label>\r\n                    <Select\r\n                      value={this.state.selectedOption}\r\n                      onChange={this.handleUserChange}\r\n                      options={selectedOptions ? selectedOptions : []}\r\n                    />\r\n                  </FormGroup>\r\n\r\n                  <FormGroup row className=\"my-0\">\r\n                    <Col xs=\"6\">\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"email\">Email</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"email\"\r\n                          placeholder=\"Email\"\r\n                          value={\r\n                            this.state.user.userPrincipalName\r\n                              ? this.state.user.userPrincipalName\r\n                              : \"\"\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"6\">\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"telephoneNumber\">Phone Number</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"telephoneNumber\"\r\n                          placeholder=\"Phone Number\"\r\n                          value={\r\n                            this.state.user.telephoneNumber\r\n                              ? this.state.user.telephoneNumber\r\n                              : \"\"\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row className=\"my-0\">\r\n                    <Col xs=\"4\">\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"username\">Username</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"username\"\r\n                          placeholder=\"User Name\"\r\n                          value={\r\n                            this.state.user.sAMAccountName\r\n                              ? this.state.user.sAMAccountName\r\n                              : \"\"\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"4\">\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"firstName\">First Name</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"firstName\"\r\n                          placeholder=\"First Name\"\r\n                          value={\r\n                            this.state.user.givenName\r\n                              ? this.state.user.givenName\r\n                              : \"\"\r\n                          }\r\n                          readOnly\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"4\">\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"lastName\">Last Name</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          id=\"lastName\"\r\n                          placeholder=\"Last Name\"\r\n                          value={this.state.user.sn ? this.state.user.sn : \"\"}\r\n                          readOnly\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </FormGroup>\r\n                  <FormGroup row className=\"my-0\">\r\n                    <Col xs=\"3\">\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"roleId\">Role</Label>\r\n                        <Input type=\"select\" id=\"roleId\" name=\"roleId\" required>\r\n                          <option value=\"\">Select Role for the user</option>\r\n                          {this.state.roles.map((role, index) => (\r\n                            <option key={index} value={role.id}>\r\n                              {role.name}\r\n                            </option>\r\n                          ))}\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"3\">\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"branchId\">Branch</Label>\r\n                        <Select\r\n                          id=\"branchId\"\r\n                          name=\"branchId\"\r\n                          value={this.state.selectedBranch ? this.state.selectedBranch : \"\"}\r\n                          onChange={this.handleBranchChange}\r\n                          options={branches ? branches : []}\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"3\">\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"departmentId\">Department</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          id=\"departmentId\"\r\n                          name=\"departmentId\"\r\n                        >\r\n                          <option value=\"\">Select Department</option>\r\n                          {this.state.departments.map((department, index) => {\r\n                            let padding = \"- \";\r\n                            let level = department.level;\r\n                            while (level-- > 0) {\r\n                              padding += \"--> \";\r\n                            }\r\n                            return (\r\n                              <option key={index} value={department.id}>\r\n                                {padding + department.name}\r\n                              </option>\r\n                            );\r\n                          })}\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col xs=\"3\">\r\n                      <FormGroup>\r\n                        <Label htmlFor=\"loginAttempts\">Login Attempts</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          id=\"loginAttempts\"\r\n                          name=\"loginAttempts\"\r\n                          required\r\n                        >\r\n                          <option value={3}>3</option>\r\n                          <option value={5}>5</option>\r\n                          <option value={10}>10</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </FormGroup>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <Button type=\"submit\" size=\"sm\" color=\"success\">\r\n                    <i className=\"fa fa-dot-circle-o\"></i> Submit\r\n                  </Button>\r\n                </CardFooter>\r\n              </Card>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddUser;\r\n"],"sourceRoot":""}