{"version":3,"sources":["util/form.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/CardFooter.js","../node_modules/reactstrap/es/Label.js","../node_modules/reactstrap/es/FormGroup.js","views/Roles/api.js","views/Roles/RoleForm.js","views/Roles/AddRole.js"],"names":["getFormData","event","formData","form","target","i","length","element","elements","name","value","type","checked","loadDataInsideForm","object","Object","keys","forEach","key","document","getElementById","propTypes","tag","tagPropType","className","PropTypes","string","cssModule","CardHeader","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","CardFooter","stringOrNumberProp","oneOfType","number","columnProps","shape","size","order","offset","children","node","hidden","bool","check","for","xs","sm","md","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","Label","htmlFor","colClasses","columnProp","colClass","isObject","_classNames","colSizeInterfix","push","row","inline","disabled","FormGroup","url","getRoles","callback","server","get","then","json","data","catch","err","getRole","id","editRole","role","put","addRole","post","getRoleTypes","deleteRole","delete","RoleForm","isEdit","roleControls","role_controls","formId","onSubmit","handleSubmit","title","placeholder","required","onChange","handleChange","isMaker","isChecker","isApprover","roleTypes","map","rT","roleControl","filter","rC","Number","roleTypeId","description","options","o","label","color","AddDepartment","e","preventDefault","history","bind","this","Component"],"mappings":"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","file":"static/js/26.402d7d14.chunk.js","sourcesContent":["const getFormData = event => {\r\n    const formData = {};\r\n    const form = event.target;\r\n    for (let i = 0; i < form.length; i++) {\r\n        const element = form.elements[i];\r\n        const name = element.name;\r\n        const value = element.value;\r\n        const type = element.type;\r\n        if (value) {\r\n            switch (type) {\r\n                case \"checkbox\":\r\n                    formData[name] = element.checked;\r\n                    break;\r\n                default:\r\n                    formData[name] = value;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    return formData;\r\n}\r\n\r\nconst loadDataInsideForm = (object) => {\r\n    if (!object) return;\r\n    const keys = Object.keys(object);\r\n    keys.forEach(key => {\r\n        const value = object[key];\r\n        const element = document.getElementById(key);\r\n        if (element) {\r\n            element.checked = value;\r\n            element.value = value;\r\n        }\r\n    });\r\n}\r\n\r\nexport {\r\n    getFormData,\r\n    loadDataInsideForm,\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardFooter = function CardFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-footer'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardFooter.propTypes = propTypes;\nCardFooter.defaultProps = defaultProps;\nexport default CardFooter;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import { server } from '../../config/server';\r\n\r\nconst url = '/roles';\r\n\r\nfunction getRoles(callback) {\r\n    server.get(\r\n        `${url}`,\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nfunction getRole(id, callback) {\r\n    server.get(\r\n        `${url}/${id}`,\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nfunction editRole(role, callback) {\r\n    server.put(\r\n        `${url}/${role.id}`,\r\n        role\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nfunction addRole(role, callback) {\r\n    server.post(\r\n        `${url}`,\r\n        role\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nfunction getRoleTypes(callback) {\r\n    server.get(\r\n        `${url}/types`,\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nfunction deleteRole(id, callback) {\r\n    server.delete(\r\n        `${url}/${id}`,\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nexport {\r\n    getRoles,\r\n    getRoleTypes,\r\n    getRole,\r\n    editRole,\r\n    addRole,\r\n    deleteRole,\r\n}","import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  CardFooter,\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Input,\r\n  Form,\r\n  FormGroup,\r\n  Label\r\n} from \"reactstrap\";\r\nimport { options } from \"./util\";\r\n\r\nconst RoleForm = props => {\r\n  const isEdit = !!props.isEdit;\r\n  const role = props.role ? props.role : {};\r\n  const roleControls = role.role_controls ? role.role_controls : [];\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <Row>\r\n        <Col md={6}>\r\n          <Card>\r\n            <Form id={props.formId} onSubmit={props.handleSubmit}>\r\n              <CardHeader>\r\n                <strong>\r\n                  <i className=\"icon-briefcase pr-2\"></i>\r\n                  {props.title}\r\n                </strong>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"name\">Name</Label>\r\n                  {isEdit ? (\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      placeholder=\"Enter role name\"\r\n                      required\r\n                      value={role.name ? role.name : \"\"}\r\n                      onChange={props.handleChange}\r\n                    />\r\n                  ) : (\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      placeholder=\"Enter role name\"\r\n                      required\r\n                    />\r\n                  )}\r\n                </FormGroup>\r\n                {isEdit ? (\r\n                  <Row>\r\n                    <Col>\r\n                      <FormGroup check>\r\n                        <Label check>\r\n                          <Input\r\n                            type=\"radio\"\r\n                            onChange={props.handleChange}\r\n                            checked={role.isMaker ? role.isMaker : false}\r\n                            name=\"radio-button\"\r\n                            value=\"isMaker\"\r\n                          />{\" \"}\r\n                          Maker\r\n                        </Label>\r\n                      </FormGroup>\r\n                      {/* <FormGroup check className=\"checkbox my-3\">\r\n                        <Input\r\n                          className=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          id=\"isMaker\"\r\n                          onChange={props.handleChange}\r\n                          checked={!!role.isMaker}\r\n                          name=\"isMaker\"\r\n                        />\r\n                        <Label\r\n                          check\r\n                          className=\"form-check-label\"\r\n                          htmlFor=\"isMaker\"\r\n                        >\r\n                          Maker\r\n                        </Label>\r\n                      </FormGroup> */}\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup check>\r\n                        <Label check>\r\n                          <Input\r\n                            type=\"radio\"\r\n                            onChange={props.handleChange}\r\n                            checked={role.isChecker ? role.isChecker : false}\r\n                            name=\"radio-button\"\r\n                            value=\"isChecker\"\r\n                          />{\" \"}\r\n                          Checker\r\n                        </Label>\r\n                      </FormGroup>\r\n                      {/* <FormGroup check className=\"checkbox my-3\">\r\n                        <Input\r\n                          className=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          id=\"isChecker\"\r\n                          onChange={props.handleChange}\r\n                          checked={!!role.isChecker}\r\n                          name=\"isChecker\"\r\n                        />\r\n                        <Label\r\n                          check\r\n                          className=\"form-check-label\"\r\n                          htmlFor=\"isChecker\"\r\n                        >\r\n                          Checker\r\n                        </Label>\r\n                      </FormGroup> */}\r\n                    </Col>\r\n                    <Col>\r\n                      <FormGroup check>\r\n                        <Label check>\r\n                          <Input\r\n                            type=\"radio\"\r\n                            onChange={props.handleChange}\r\n                            checked={role.isApprover ? role.isApprover : false}\r\n                            name=\"radio-button\"\r\n                            value=\"isApprover\"\r\n                          />{\" \"}\r\n                          Approver\r\n                        </Label>\r\n                      </FormGroup>\r\n                      {/* <FormGroup check className=\"checkbox my-3\">\r\n                        <Input\r\n                          className=\"form-check-input\"\r\n                          type=\"checkbox\"\r\n                          id=\"isApprover\"\r\n                          onChange={props.handleChange}\r\n                          name=\"isApprover\"\r\n                        />\r\n                        <Label\r\n                          check\r\n                          className=\"form-check-label\"\r\n                          htmlFor=\"isApprover\"\r\n                        >\r\n                          Approver\r\n                        </Label>\r\n                      </FormGroup> */}\r\n                    </Col>\r\n                  </Row>\r\n                ) : null}\r\n                {isEdit && props.roleTypes\r\n                  ? props.roleTypes.map((rT, i) => {\r\n                      let roleControl = roleControls.filter(rC =>\r\n                        Number(rC.roleTypeId) === rT.id ? 1 : 0\r\n                      )[0];\r\n                      roleControl = roleControl ? roleControl : {};\r\n                      return (\r\n                        <FormGroup key={i}>\r\n                          <Label htmlFor={i}>{rT.name}</Label>\r\n                          <Input\r\n                            title={rT.description ? rT.description : \"\"}\r\n                            type=\"select\"\r\n                            id={i}\r\n                            name={\"control-\" + rT.id}\r\n                            value={roleControl.value}\r\n                            onChange={props.handleChange}\r\n                          >\r\n                            {options.map((o, i) => {\r\n                              return (\r\n                                <option key={i} value={o.value}>\r\n                                  {o.label}\r\n                                </option>\r\n                              );\r\n                            })}\r\n                          </Input>\r\n                        </FormGroup>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button type=\"submit\" size=\"sm\" color=\"success\">\r\n                  <i className=\"fa fa-dot-circle-o\"></i> Submit\r\n                </Button>\r\n                <Button className=\"ml-2\" type=\"reset\" size=\"sm\" color=\"danger\">\r\n                  <i className=\"fa fa-ban\"></i> Reset\r\n                </Button>\r\n              </CardFooter>\r\n            </Form>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoleForm;\r\n","import React, { Component } from 'react';\r\nimport { getFormData } from '../../util/form';\r\nimport { addRole } from './api';\r\nimport RoleForm from './RoleForm';\r\n\r\nclass AddDepartment extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const form = getFormData(e);\r\n        addRole(form, (err, data) => {\r\n            if (err) return;\r\n            this.props.history.push(\"/roles\")\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <RoleForm\r\n                title=\"Add Role\"\r\n                handleSubmit={this.handleSubmit}\r\n                {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddDepartment;\r\n"],"sourceRoot":""}