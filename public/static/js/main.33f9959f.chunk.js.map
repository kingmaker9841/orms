{"version":3,"sources":["polyfill.js","App.js","views/Pages/Login/Login.js","views/Pages/Login/api.js","serviceWorker.js","index.js","config/server.js"],"names":["window","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","BaseLayout","React","lazy","Page404","Page500","App","state","hasError","server","get","then","json","setState","permissions","data","catch","_","localStorage","clear","err","errInfo","this","getPermissions","className","Suspense","fallback","exact","path","name","render","props","error","Component","Login","email","password","handleSubmit","e","body","preventDefault","post","token","setItem","TOKEN","location","reload","alert","handleChange","target","value","Container","Row","Col","md","CardGroup","Card","CardBody","Form","onSubmit","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","onChange","placeholder","required","autoComplete","type","xs","Button","color","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","axios","require","header","getItem","headerAuth","create","baseURL","process","headers","module","exports","SERVER_URL"],"mappings":"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","file":"static/js/main.33f9959f.chunk.js","sourcesContent":["/*\n* required polyfills\n*/\nimport \"core-js\";\nimport 'core-js/features/set/map';\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. **/\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\n// import 'core-js/es6/array'\n// import 'core-js/es6/regexp'\n// import 'core-js/es6/map'\n// import 'core-js/es6/weak-map'\n// import 'core-js/es6/set'\n// import 'core-js/es7/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. **/\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n\n  if ( typeof window.CustomEvent === \"function\" ) return false\n\n  function CustomEvent ( event, params ) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    var evt = document.createEvent( 'CustomEvent' )\n    evt.initCustomEvent( event, params.bubbles, params.cancelable, params.detail )\n    return evt\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n\n  window.CustomEvent = CustomEvent\n})()\n","import React, { Component } from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { server } from './config/server';\nimport './App.scss';\n\nconst loading = () => <div className=\"animated fadeIn pt-3 text-center\">Loading...</div>;\n\n// Containers\nconst BaseLayout = React.lazy(() => import('./containers/BaseLayout'));\n\n// Pages\nconst Page404 = React.lazy(() => import('./views/Pages/Page404'));\nconst Page500 = React.lazy(() => import('./views/Pages/Page500'));\n\nclass App extends Component {\n\n  state = {\n    hasError: false,\n  }\n\n  getPermissions() {\n    server.get('/permissions')\n      .then(json => {\n        this.setState({ permissions: json.data })\n      })\n      .catch(_ => {\n        localStorage.clear();\n      });\n  }\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(err, errInfo) {\n\n  }\n\n  componentDidMount() {\n    this.getPermissions();\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1 className=\"w-100 h-100 text-center mt-5\">Oops! Something went wrong</h1>\n    } else {\n      return this.state.permissions ?\n        <HashRouter>\n          <React.Suspense fallback={loading()}>\n            <Switch>\n              {/* <Route exact path=\"/login\" name=\"Login Page\" render={props => <Login {...props} />} /> */}\n              {/* <Route exact path=\"/register\" name=\"Register Page\" render={props => <Register {...props} />} /> */}\n              <Route exact path=\"/404\" name=\"Page 404\" render={props => <Page404 {...props} />} />\n              <Route exact path=\"/500\" name=\"Page 500\" render={props => <Page500 {...props} />} />\n              <Route path=\"/\" name=\"Home\" render={props => <BaseLayout {...props} permissions={this.state.permissions} />} />\n            </Switch>\n          </React.Suspense>\n        </HashRouter>\n        :\n        null\n    }\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\n// import { Link } from 'react-router-dom';\nimport { Button, Card, CardBody, CardGroup, Col, Container, Form, Input, InputGroup, InputGroupAddon, InputGroupText, Row } from 'reactstrap';\nimport { login } from './api';\n\nclass Login extends Component {\n\n  state = {\n    email: '',\n    password: '',\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    login({\n      email: this.state.email,\n      password: this.state.password,\n    });\n  }\n\n  handleChange = e => {\n    switch (e.target.name) {\n      case \"email\":\n        this.setState({ email: e.target.value });\n        break;\n      case \"password\":\n        this.setState({ password: e.target.value });\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app flex-row align-items-center\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col md=\"8\">\n              <CardGroup>\n                <Card className=\"p-4\">\n                  <CardBody>\n                    <Form onSubmit={this.handleSubmit}>\n                      <h1>Login</h1>\n                      <p className=\"text-muted\">Sign In to your account</p>\n                      <InputGroup className=\"mb-3\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-user\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          // type=\"email\"\n                          onChange={this.handleChange}\n                          value={this.state.email}\n                          name=\"email\" placeholder=\"Email/Username\"\n                          required\n                          autoComplete=\"email\" />\n                      </InputGroup>\n                      <InputGroup className=\"mb-4\">\n                        <InputGroupAddon addonType=\"prepend\">\n                          <InputGroupText>\n                            <i className=\"icon-lock\"></i>\n                          </InputGroupText>\n                        </InputGroupAddon>\n                        <Input\n                          type=\"password\"\n                          onChange={this.handleChange}\n                          value={this.state.password}\n                          name=\"password\" placeholder=\"Password\"\n                          required\n                          autoComplete=\"current-password\" />\n                      </InputGroup>\n                      <Row>\n                        <Col xs=\"6\">\n                          <Button color=\"primary\" className=\"px-4\">Login</Button>\n                        </Col>\n                        {/* <Col xs=\"6\" className=\"text-right\">\n                          <Button color=\"link\" className=\"px-0\">Forgot password?</Button>\n                        </Col> */}\n                      </Row>\n                    </Form>\n                  </CardBody>\n                </Card>\n                {/* <Card className=\"text-white bg-primary py-5 d-md-down-none\" style={{ width: '44%' }}>\n                  <CardBody className=\"text-center\">\n                    <div>\n                      <h2>Sign up</h2>\n                      <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut\n                        labore et dolore magna aliqua.</p>\n                      <Link to=\"/register\">\n                        <Button color=\"primary\" className=\"mt-3\" active tabIndex={-1}>Register Now!</Button>\n                      </Link>\n                    </div>\n                  </CardBody>\n                </Card> */}\n              </CardGroup>\n            </Col>\n          </Row>\n        </Container>\n      </div >\n    );\n  }\n}\n\nexport default Login;\n","import { server, TOKEN } from '../../../config/server';\r\n\r\nfunction login(body, callback) {\r\n    server.post(\r\n        `/login`,\r\n        body\r\n    ).then(json => {\r\n        const data = json.data;\r\n        if (data.token) {\r\n            localStorage.setItem(TOKEN, data.token);\r\n        }\r\n        window.location.reload();\r\n    }).catch(err => {\r\n        window.alert(\"You cannot login to this system!\");\r\n    });\r\n}\r\n\r\nexport {\r\n    login\r\n}","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import 'react-app-polyfill/ie9'; // For IE 9-11 support\r\nimport 'react-app-polyfill/stable';\r\n// import 'react-app-polyfill/ie11'; // For IE 11 support\r\nimport './polyfill'\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport LoginPage from './views/Pages/Login/Login';\r\nimport { server } from './config/server';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport \"react-toastify/dist/ReactToastify.css\"\r\n\r\n//  ReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\nserver.get('/isLoggedIn').then(json => {\r\n    ReactDOM.render(<App />, document.getElementById('root'));\r\n}).catch(err => {\r\n    ReactDOM.render(<LoginPage />, document.getElementById('root'));\r\n});\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","const axios = require('axios');\r\nconst TOKEN = \"token\";\r\nconst header = {\r\n    'Content-Type': 'application/json',\r\n    'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)\r\n}\r\nconst headerAuth = {\r\n    'Authorization': 'Bearer ' + localStorage.getItem(TOKEN)\r\n}\r\n\r\nconst SERVER_URL = process.env.REACT_APP_SERVER_URL;\r\nconst server = axios.create({\r\n    baseURL: SERVER_URL,\r\n    headers: header\r\n});\r\n\r\nmodule.exports.TOKEN = TOKEN;\r\nmodule.exports.header = header;\r\nmodule.exports.headerAuth = headerAuth;\r\nmodule.exports.SERVER_URL = SERVER_URL;\r\nmodule.exports.server = server;\r\n"],"sourceRoot":""}