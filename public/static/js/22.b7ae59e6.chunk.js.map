{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","util/form.js","../node_modules/reactstrap/es/Label.js","views/RiskAreas/api.js","views/RiskAreas/util.js","../node_modules/reactstrap/es/FormGroup.js","views/RiskAreas/RiskParticularRuleRange.js","views/RiskAreas/RiskParticularRuleInstance.js","views/RiskAreas/RiskTrigger.js","views/RiskAreas/RiskTracedBy.js","views/RiskAreas/RiskAreaForm.js","views/RiskAreas/AddRiskArea.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_slicedToArray","arr","Array","isArray","Symbol","iterator","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","value","err","TypeError","getFormData","event","formData","form","element","elements","name","type","checked","loadDataInsideForm","document","getElementById","stringOrNumberProp","PropTypes","oneOfType","number","string","columnProps","shape","size","order","offset","propTypes","children","node","hidden","bool","check","for","tag","tagPropType","className","cssModule","xs","sm","md","lg","xl","widths","array","defaultProps","getColumnSizeClass","isXs","colWidth","colSize","Label","props","Tag","htmlFor","attributes","_objectWithoutPropertiesLoose","colClasses","columnProp","colClass","isObject","_classNames","colSizeInterfix","mapToCssModules","classNames","classes","React","createElement","_extends","url","getLikelihoodAndImpacts","callback","server","get","then","json","data","catch","getRiskAreas","getRiskAreaCodes","getRiskArea","id","editRiskArea","riskArea","put","editRiskAreaCodes","riskAreaCodes","addRiskArea","post","deleteRiskArea","delete","populateLikelihoodTable","riskParticularLikelihoodRules","likelihoodId","rule","l","Number","populateImpactTable","riskParticularImpacts","impactId","imapctRule","populateInstanceLikelihoodTable","riskParticularLikelihood","likelihoodRule","populateInstanceImpactTable","riskParticularImpact","impactRule","splitText","row","inline","disabled","FormGroup","RiskRuleRange","riskParticular","index","Row","Col","Table","striped","responsive","style","minWidth","likelihoods","map","likelihood","idx","risk_area_likelihood_rules","Input","lowerLimit","toLocaleString","onChange","upperLimit","impacts","impact","risk_area_impact_rules","require","RiskRuleInstance","useState","btnHidden","setButtonAddFlag","handleRiskParticularNameChange","propName","riskParticularArrName","e","r","join","riskParticulars","riskInstanceRules","Card","CardHeader","Button","color","onClick","deleteRiskParticularTable","CardBody","scope","indx","riskImpact","riskParticularName","split","Fragment","InputGroup","InputGroupAddon","addonType","width","code","handleRiskParticularCodeChange","placeholder","required","handleRiskParticularNameDelete","handleAddImpact","display","RiskTrigger","riskTriggers","riskTrigger","valid","handleTriggerChange","deleteRiskTrigger","CardFooter","addRiskTrigger","RiskTracedBy","riskTracedBy","tracedBy","handleRiskTracedByChange","deleteRiskTracedBy","addRiskTracedBy","RiskAreaForm","collapse","setCollapse","risk_area_particulars","risk_area_likelihood_instance_rules","risk_area_triggers","risk_area_traced_bies","Form","formId","onSubmit","handleSubmit","title","handleRiskAreaChange","isActive","permissions","isApprover","isEdit","baseUnitId","baseUnits","b","Collapse","isOpen","handleChangeRiskRule","instanceVisible","addRiskAreaParticularTable","riskAreaId","AddRiskArea","state","riskAreas","preventDefault","history","bind","this","Component"],"mappings":"6FAAA,+CAEA,SAASA,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GAEvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GACvCC,IAAgBI,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,eAEtDP,EAAKQ,KAAKC,MAAMT,EAAMG,GAGxB,OAAOH,EAGM,SAASU,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNf,EAAQI,OAAOc,IAAS,GAAMC,SAAQ,SAAUC,GAC9C,YAAeN,EAAQM,EAAKF,EAAOE,OAE5BhB,OAAOiB,0BAChBjB,OAAOkB,iBAAiBR,EAAQV,OAAOiB,0BAA0BH,IAEjElB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GACxChB,OAAOmB,eAAeT,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,OAKjF,OAAON,I,iCC9BM,SAASU,EAAeC,EAAKV,GAC1C,OCJa,SAAyBU,GACtC,GAAIC,MAAMC,QAAQF,GAAM,OAAOA,EDGxB,CAAeA,IEJT,SAA+BA,EAAKV,GACjD,GAAMa,OAAOC,YAAYzB,OAAOqB,IAAgD,uBAAxCrB,OAAO0B,UAAUC,SAASC,KAAKP,GAAvE,CAIA,IAAIQ,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKd,EAAIG,OAAOC,cAAmBK,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKtB,KAAK2B,EAAGI,QAET3B,GAAKkB,EAAKhB,SAAWF,GAH8CmB,GAAK,IAK9E,MAAOS,GACPR,GAAK,EACLC,EAAKO,EACL,QACA,IACOT,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFvBuB,CAAqBR,EAAKV,IGJ3C,WACb,MAAM,IAAI6B,UAAU,wDHG0C,GAJhE,mC,iCIAA,wEAAMC,EAAc,SAAAC,GAGhB,IAFA,IAAMC,EAAW,GACXC,EAAOF,EAAMhC,OACVC,EAAI,EAAGA,EAAIiC,EAAK/B,OAAQF,IAAK,CAClC,IAAMkC,EAAUD,EAAKE,SAASnC,GACxBoC,EAAOF,EAAQE,KACfT,EAAQO,EAAQP,MAChBU,EAAOH,EAAQG,KACrB,GAAIV,EACA,OAAQU,GACJ,IAAK,WACDL,EAASI,GAAQF,EAAQI,QACzB,MACJ,QACIN,EAASI,GAAQT,GAKjC,OAAOK,GAGLO,EAAqB,SAACrD,GACnBA,GACQG,OAAOD,KAAKF,GACpBkB,SAAQ,SAAAC,GACT,IAAMsB,EAAQzC,EAAOmB,GACf6B,EAAUM,SAASC,eAAepC,GACpC6B,IACAA,EAAQI,QAAUX,EAClBO,EAAQP,MAAQA,Q,iCC9B5B,2EAOIe,EAAqBC,IAAUC,UAAU,CAACD,IAAUE,OAAQF,IAAUG,SACtEC,EAAcJ,IAAUC,UAAU,CAACD,IAAUG,OAAQH,IAAUE,OAAQF,IAAUK,MAAM,CACzFC,KAAMP,EACNQ,MAAOR,EACPS,OAAQT,MAENU,EAAY,CACdC,SAAUV,IAAUW,KACpBC,OAAQZ,IAAUa,KAClBC,MAAOd,IAAUa,KACjBP,KAAMN,IAAUG,OAChBY,IAAKf,IAAUG,OACfa,IAAKC,IACLC,UAAWlB,IAAUG,OACrBgB,UAAWnB,IAAUzD,OACrB6E,GAAIhB,EACJiB,GAAIjB,EACJkB,GAAIlB,EACJmB,GAAInB,EACJoB,GAAIpB,EACJqB,OAAQzB,IAAU0B,OAEhBC,EAAe,CACjBX,IAAK,QACLS,OAzBc,CAAC,KAAM,KAAM,KAAM,KAAM,OA4BrCG,EAAqB,SAA4BC,EAAMC,EAAUC,GACnE,OAAgB,IAAZA,GAAgC,KAAZA,EACfF,EAAO,MAAQ,OAASC,EACV,SAAZC,EACFF,EAAO,WAAa,OAASC,EAAW,QAG1CD,EAAO,OAASE,EAAU,OAASD,EAAW,IAAMC,GAGzDC,EAAQ,SAAeC,GACzB,IAAIf,EAAYe,EAAMf,UAClBC,EAAYc,EAAMd,UAClBP,EAASqB,EAAMrB,OACfa,EAASQ,EAAMR,OACfS,EAAMD,EAAMjB,IACZF,EAAQmB,EAAMnB,MACdR,EAAO2B,EAAM3B,KACb6B,EAAUF,EAAMlB,IAChBqB,EAAaC,YAA8BJ,EAAO,CAAC,YAAa,YAAa,SAAU,SAAU,MAAO,QAAS,OAAQ,QAEzHK,EAAa,GACjBb,EAAOhE,SAAQ,SAAUqE,EAAUzE,GACjC,IAAIkF,EAAaN,EAAMH,GAGvB,UAFOM,EAAWN,GAEbS,GAA6B,KAAfA,EAAnB,CAIA,IACIC,EADAX,GAAQxE,EAGZ,GAAIoF,YAASF,GAAa,CACxB,IAAIG,EAEAC,EAAkBd,EAAO,IAAM,IAAMC,EAAW,IACpDU,EAAWZ,EAAmBC,EAAMC,EAAUS,EAAWjC,MACzDgC,EAAWrF,KAAK2F,YAAgBC,MAAYH,EAAc,IAAgBF,GAAYD,EAAWjC,MAA4B,KAApBiC,EAAWjC,KAAaoC,EAAY,QAAUC,EAAkBJ,EAAWhC,OAASgC,EAAWhC,OAA8B,IAArBgC,EAAWhC,MAAamC,EAAY,SAAWC,EAAkBJ,EAAW/B,QAAU+B,EAAW/B,QAAgC,IAAtB+B,EAAW/B,OAAckC,KAAgBvB,QAErWqB,EAAWZ,EAAmBC,EAAMC,EAAUS,GAC9CD,EAAWrF,KAAKuF,OAGpB,IAAIM,EAAUF,YAAgBC,IAAW3B,IAAWN,GAAS,YAAmBE,GAAQ,qBAA4BR,GAAO,kBAAoBA,EAAcgC,IAAYA,EAAW/E,QAAS,kBAA2B4D,GACxN,OAAO4B,IAAMC,cAAcd,EAAKe,YAAS,CACvCd,QAASA,GACRC,EAAY,CACblB,UAAW4B,MAIfd,EAAMvB,UAAYA,EAClBuB,EAAML,aAAeA,EACNK,O,iCCxFf,4RAEMkB,EAAM,cAEZ,SAASC,EAAwBC,GAC7BC,SACKC,IADL,sBAEKC,MAAK,SAAUC,GACZJ,EAAS,KAAMI,EAAKC,SAEvBC,OAAM,SAAUzE,GACbmE,EAASnE,MAIrB,SAAS0E,EAAaP,GAClBC,SAAOC,IAAP,UACOJ,IACLK,MAAK,SAAUC,GACbJ,EAAS,KAAMI,EAAKC,SACrBC,OAAM,SAAUzE,GACfmE,EAASnE,MAIjB,SAAS2E,EAAiBR,GACtBC,SAAOC,IAAP,UACOJ,EADP,UAEEK,MAAK,SAAUC,GACbJ,EAAS,KAAMI,EAAKC,SACrBC,OAAM,SAAUzE,GACfmE,EAASnE,MAIjB,SAAS4E,EAAYC,EAAIV,GACrBC,SAAOC,IAAP,UACOJ,EADP,YACcY,IACZP,MAAK,SAAUC,GACbJ,EAAS,KAAMI,EAAKC,SACrBC,OAAM,SAAUzE,GACfmE,EAASnE,MAIjB,SAAS8E,EAAaC,EAAUZ,GAC5BC,SAAOY,IAAP,UACOf,EADP,YACcc,EAASF,IACnBE,GACFT,MAAK,SAAUC,GACbJ,EAAS,KAAMI,EAAKC,SACrBC,OAAM,SAAUzE,GACfmE,EAASnE,MAIjB,SAASiF,EAAkBC,EAAef,GACtCC,SAAOY,IAAP,UACOf,EADP,SAEIiB,GACFZ,MAAK,SAAUC,GACbJ,EAAS,KAAMI,EAAKC,SACrBC,OAAM,SAAUzE,GACfmE,EAASnE,MAIjB,SAASmF,EAAYJ,EAAUZ,GAC3BC,SAAOgB,KAAP,UACOnB,GACHc,GACFT,MAAK,SAAUC,GACbJ,EAAS,KAAMI,EAAKC,SACrBC,OAAM,SAAUzE,GACfmE,EAASnE,MAIjB,SAASqF,EAAeR,EAAIV,GACxBC,SAAOkB,OAAP,UACOrB,EADP,YACcY,IACZP,MAAK,SAAUC,GACbJ,EAAS,KAAMI,EAAKC,SACrBC,OAAM,SAAUzE,GACfmE,EAASnE,Q,iCCpFjB,SAASuF,EAAwBC,EAA+BC,GAC9D,GAAID,GAAiCC,EAAc,CACjD,IAAMC,EAAOF,EAA8B5H,QAAO,SAAA+H,GAAC,OACjDC,OAAOD,EAAEF,gBAAkBA,EAAe,EAAI,KAC9C,GACF,OAAOC,GAAc,GAEvB,MAAO,GAGT,SAASG,EAAoBC,EAAuBC,GAClD,GAAID,GAAyBC,EAAU,CACrC,IAAMC,EAAaF,EAAsBlI,QAAO,SAAA+H,GAAC,OAC/CC,OAAOD,EAAEI,YAAcA,EAAW,EAAI,KACtC,GACF,OAAOC,GAA0B,GAEnC,MAAO,GAGT,SAASC,EAAgCC,EAA0BT,GACjE,GAAIS,GAA4BT,EAAc,CAC5C,IAAMU,EAAiBD,EAAyBtI,QAAO,SAAA+H,GAAC,OAAIA,EAAEF,eAAiBA,EAAe,EAAI,KAAG,GACrG,OAAOU,GAAkC,GAE3C,MAAO,GAGT,SAASC,EAA4BC,EAAsBN,GACzD,GAAIM,GAAwBN,EAAU,CACpC,IAAMO,EAAaD,EAAqBzI,QAAO,SAAA+H,GAAC,OAAIA,EAAEI,WAAaA,EAAW,EAAI,KAAG,GACrF,OAAOO,GAA0B,GAEnC,MAAO,GAjCT,yRAoCA,IAAMC,EAAY,O,iCCpClB,2EAMI/E,EAAY,CACdC,SAAUV,IAAUW,KACpB8E,IAAKzF,IAAUa,KACfC,MAAOd,IAAUa,KACjB6E,OAAQ1F,IAAUa,KAClB8E,SAAU3F,IAAUa,KACpBG,IAAKC,IACLC,UAAWlB,IAAUG,OACrBgB,UAAWnB,IAAUzD,QAMnBqJ,EAAY,SAAmB3D,GACjC,IAAIf,EAAYe,EAAMf,UAClBC,EAAYc,EAAMd,UAClBsE,EAAMxD,EAAMwD,IACZE,EAAW1D,EAAM0D,SACjB7E,EAAQmB,EAAMnB,MACd4E,EAASzD,EAAMyD,OACfxD,EAAMD,EAAMjB,IACZoB,EAAaC,YAA8BJ,EAAO,CAAC,YAAa,YAAa,MAAO,WAAY,QAAS,SAAU,QAEnHa,EAAUF,YAAgBC,IAAW3B,IAAWuE,GAAM,MAAe3E,EAAQ,aAAe,gBAAcA,IAAS4E,IAAS,uBAA6B5E,IAAS6E,IAAW,YAAqBxE,GAMtM,MAJY,aAARe,IACFE,EAAWuD,SAAWA,GAGjB5C,IAAMC,cAAcd,EAAKe,YAAS,GAAIb,EAAY,CACvDlB,UAAW4B,MAIf8C,EAAUnF,UAAYA,EACtBmF,EAAUjE,aA1BS,CACjBX,IAAK,OA0BQ4E,O,oHC+EAC,EAtHO,SAAA5D,GACpB,IAAM6D,EAAiB7D,EAAM6D,eACvBC,EAAQ9D,EAAM8D,MACpB,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK1E,GAAI,GACP,kBAAC2E,EAAA,EAAD,CACEC,SAAO,EACPC,YAAU,GACV,+BACE,4BACE,wBAAIC,MAAO,CAAEC,SAAU,UAAvB,cACA,wBAAID,MAAO,CAAEC,SAAU,UAAvB,eACA,wBAAID,MAAO,CAAEC,SAAU,UAAvB,iBAGJ,+BACGrE,EAAMsE,YAAYC,KAAI,SAACC,EAAYC,GAClC,IAAMtB,EAAiBZ,kCACrBsB,EAAea,2BACfF,EAAW3C,IAEb,OACE,wBAAIpG,IAAKgJ,GACP,wBAAIhJ,IAAK+I,EAAWhH,KAAOiH,GAAMD,EAAWhH,MAC5C,4BACE,kBAACmH,EAAA,EAAD,CACEnH,KACEqG,EAAepG,KACf,IACAqG,EACA,qBACAU,EAAW3C,GAEbpG,IAAK+I,EAAW3C,GAChB9E,MAAOoG,EAAeyB,WAAahC,OAAOO,EAAeyB,YAAYC,eAAe,MAAQ,GAC5FC,SAAU9E,EAAM8E,YAGpB,4BACE,kBAACH,EAAA,EAAD,CACEnH,KACEqG,EAAepG,KACf,IACAqG,EACA,qBACAU,EAAW3C,GAEbpG,IAAK+I,EAAW3C,GAChB9E,MAAOoG,EAAe4B,WAAanC,OAAOO,EAAe4B,YAAYF,eAAe,MAAQ,GAC5FC,SAAU9E,EAAM8E,mBAUhC,kBAACd,EAAA,EAAD,CAAK1E,GAAI,GACP,kBAAC2E,EAAA,EAAD,CACEC,SAAO,EACPC,YAAU,GACV,+BACE,4BACE,wBAAIC,MAAO,CAAEC,SAAU,UAAvB,UACA,wBAAID,MAAO,CAAEC,SAAU,UAAvB,eACA,wBAAID,MAAO,CAAEC,SAAU,UAAvB,iBAGJ,+BACGrE,EAAMgF,QAAQT,KAAI,SAACU,EAAQR,GAC1B,IAAMnB,EAAaT,8BACjBgB,EAAeqB,uBACfD,EAAOpD,IAET,OACE,wBAAIpG,IAAKgJ,GACP,wBAAIhJ,IAAKwJ,EAAOzH,KAAOiH,GAAMQ,EAAOzH,MACpC,wBAAI/B,IAAKwJ,EAAOpD,IACd,kBAAC8C,EAAA,EAAD,CACE5H,MAAOuG,EAAWsB,WAAahC,OAAOU,EAAWsB,YAAYC,eAAe,MAAQ,GACpFrH,KACEqG,EAAepG,KACf,IACAqG,EACA,iBACAmB,EAAOpD,GAETpG,IAAKwJ,EAAOpD,GACZiD,SAAU9E,EAAM8E,YAGpB,4BACE,kBAACH,EAAA,EAAD,CACE5H,MAAOuG,EAAWyB,WAAanC,OAAOU,EAAWyB,YAAYF,eAAe,MAAQ,GACpFrH,KACEqG,EAAepG,KACf,IACAqG,EACA,iBACAmB,EAAOpD,GAETpG,IAAKwJ,EAAOpD,GACZiD,SAAU9E,EAAM8E,qB,sDC3G9BvB,EAAc4B,EAAQ,KAAtB5B,UAqMO6B,EAnMU,SAAApF,GAAU,IAAD,EACMqF,mBAAS,IADf,mBACzBC,EADyB,KACdC,EADc,KAE1BC,EAAiC,SAAC1B,EAAO2B,EAAU1I,EAAO2I,GAC9D,IAAMC,EAAI,CAAExK,OAAQ,CAAEqC,KAAMiI,IACd,OAAV3B,EACF4B,EAAwBA,EAAsBnB,KAAI,SAACqB,EAAGxK,GAAJ,OAAUA,IAAM0I,EAAQ/G,EAAQ6I,KAElFF,EAAsB1K,KAAK,IAE7B2K,EAAExK,OAAO4B,MAAQ2I,EAAsBG,KAAKtC,GAC5CvD,EAAMwF,+BAA+BG,IAQjCG,EAAkB9F,EAAM8F,gBACxBC,EAAoB/F,EAAM+F,kBAChC,OACE,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,kBAAClC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,uDAIF,kBAACA,EAAA,EAAD,KACE,kBAACkC,EAAA,EAAD,CACE7H,KAAK,KACLY,UAAU,aACVkH,MAAM,SACNC,QAAS,WACPpG,EAAMqG,0BAA0B,WAAY,MAC5Cd,EAAiB,MAEnB,uBAAGtG,UAAU,oBAKrB,kBAACqH,EAAA,EAAD,KACE,kBAACvC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK1E,GAAI,GACP,kBAAC2E,EAAA,EAAD,CAAOC,SAAO,EAACC,YAAU,GACvB,+BACE,4BACE,wBAAIoC,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,eACA,wBAAIA,MAAM,OAAV,iBAGJ,+BACGvG,EAAMsE,YAAYC,KAAI,SAACC,EAAYC,GAClC,IAAItB,EAAiB4C,EAAkBnL,QAAO,SAAAgL,GAAC,OAAIhD,OAAOgD,EAAEnD,gBAAkB+B,EAAW3C,GAAK,EAAI,KAAG,GAErG,OADAsB,EAAiBA,GAAkC,GAEjD,wBAAI1H,IAAKgJ,GACP,4BAAKD,EAAWhH,MAChB,4BACE,kBAACmH,EAAA,EAAD,CACEnH,KACE,YACAiH,EACA,qBACAD,EAAW3C,GAEbpG,IAAK+I,EAAW3C,GAChB9E,MAAOoG,EAAeyB,WAAazB,EAAeyB,WAAa,GAC/DE,SAAU9E,EAAM8E,YAEpB,4BACE,kBAACH,EAAA,EAAD,CACEnH,KACE,YACAiH,EACA,qBACAD,EAAW3C,GAEbpG,IAAK+I,EAAW3C,GAChB9E,MAAOoG,EAAe4B,WAAa5B,EAAe4B,WAAa,GAC/DD,SAAU9E,EAAM8E,mBAQhC,kBAACd,EAAA,EAAD,CAAK1E,GAAI,GACP,kBAAC2E,EAAA,EAAD,CAAOC,SAAO,EAACC,YAAU,GACvB,+BACE,4BACE,wBAAIoC,MAAM,OAAV,UACA,wBAAIA,MAAM,OAAV,cAGJ,+BACGvG,EAAMgF,QAAQT,KAAI,SAACU,EAAQR,GAC1B,OACE,wBAAIhJ,IAAKgJ,GACP,wBAAIhJ,IAAKwJ,EAAOzH,KAAOiH,GAAMQ,EAAOzH,MACpC,wBAAI/B,IAAKwJ,EAAOpD,IACbiE,EAAgBvB,KAAI,SAACV,EAAgB2C,GACpC,IAAMC,EAAa5C,EAChBqB,uBAAuB,GACtBrB,EAAeqB,uBAAuB,GACtC,GACEO,EAAW,QAAUe,EACrBE,EAAqB7C,EAAerG,KAAKmJ,MAAMpD,GACrD,MAC0B,aAAxBM,EAAepG,MACfgJ,EAAW1D,WAAakC,EAAOpD,IAE1ByD,EAAUL,EAAOpD,MACpByD,EAAUL,EAAOpD,KAAM,EACvB0D,EAAiB,eAAKD,KAGtB,kBAAC,IAAMsB,SAAP,CAAgBnL,IAAK+K,GACnB,kBAACK,EAAA,EAAD,CAAY5H,UAAU,QACpB,kBAAC6H,EAAA,EAAD,CAAiBC,UAAU,WACzB,kBAACb,EAAA,EAAD,CAAQC,MAAM,UAAU1I,KAAK,UAA7B,SAIF,kBAACkH,EAAA,EAAD,CACElH,KAAK,OACLwB,UAAU,cACVmF,MAAO,CAAE4C,MAAO,KAChBxJ,KAAM,QAAUgJ,EAChBzJ,MAAO8G,EAAeoD,KAAOpD,EAAeoD,KAAO,GACnDnC,SAAU9E,EAAMkH,+BAChBC,YAAY,6BACZC,UAAQ,KAEXV,EAAmBnC,KAAI,SAAC/G,EAAMpC,GAC7B,OACE,kBAACyL,EAAA,EAAD,CAAY5H,UAAU,OAAOxD,IAAKL,GAChC,kBAACuJ,EAAA,EAAD,CACEyC,UAAQ,EACRnI,UAAWzB,EAAO,mBAAqB,GACvC/B,IAAK,qBAAuB+K,EAC5BhJ,KAAMiI,EACN1I,MAAOS,EACP2J,YAAY,kBACZrC,SAAU,SAAAa,GAAC,OAAIH,EAA+BpK,EAAGqK,EAAUE,EAAExK,OAAO4B,MAAO2J,MAE7E,kBAACI,EAAA,EAAD,CAAiBC,UAAU,UACzB,kBAACb,EAAA,EAAD,CAAQzI,KAAK,SAAS0I,MAAM,SAASC,QAAS,kBA3I7C,SAACtC,EAAO2B,EAAUC,GACvD,IAAMC,EAAI,CAAExK,OAAQ,CAAEqC,KAAMiI,IAC5BC,EAAwBA,EAAsB9K,QAAO,SAACgL,EAAGxK,GAAJ,OAAUA,IAAM0I,EAAQ,EAAI,KACjF6B,EAAExK,OAAO4B,MAAQ2I,EAAsBG,KAAKtC,GAC5CvD,EAAMwF,+BAA+BG,GAuImD0B,CAA+BjM,EAAGqK,EAAUiB,KAC9F,uBAAGzH,UAAU,sBAMvB,kBAACiH,EAAA,EAAD,CAAQjH,UAAU,aAAakH,MAAM,UAAU9H,KAAK,KAAK+H,QAAS,WAChEZ,EAA+B,KAAMC,EAAU,GAAIiB,KADrD,OAQC,QAERpB,EAAUL,EAAOpD,IAChB,KACA,kBAACqE,EAAA,EAAD,CACErE,GAAI,oBAAsBoD,EAAOpD,GACjCpG,IAAKgJ,EACL0B,MAAM,UACNlH,UAAU,OACVmH,QAAS,SAAAT,GACP3F,EAAMsH,gBAAgBrC,EAAOpD,IAC7B8D,EAAExK,OAAOoM,QAAU,SAPvB,iB,kBCzHXC,EAlDK,SAAAxH,GAClB,IAAMyH,EAAezH,EAAMyH,aAC3B,OACE,kBAACzB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYhH,UAAU,oBAAtB,iBAGA,kBAACqH,EAAA,EAAD,KACE,kBAACrC,EAAA,EAAD,KACE,+BACGwD,EAAalD,KAAI,SAACmD,EAAalB,GAC9B,OACE,wBAAI/K,IAAK+K,GACP,4BACE,kBAACzG,EAAA,EAAD,CAAOG,QAAS,WAAasG,GAC3B,gCAASA,EAAO,KAGpB,4BACE,kBAAC7B,EAAA,EAAD,CACE9C,GAAI,WAAa2E,EACjB/K,IAAK+K,EACLmB,OAAK,EACLnK,KAAMgJ,EACNzJ,MAAO2K,EAAYlK,KACnBsH,SAAU9E,EAAM4H,oBAChBR,UAAQ,KAEZ,4BACE,kBAAClB,EAAA,EAAD,CACEC,MAAM,UACNC,QAAS,kBAAMpG,EAAM6H,kBAAkBrB,KACvC,uBAAGvH,UAAU,yBAS7B,kBAAC6I,EAAA,EAAD,KACE,kBAAC5B,EAAA,EAAD,CAAQC,MAAM,OAAOlH,UAAU,8BAA8BmH,QAASpG,EAAM+H,gBAA5E,QCSOC,EAnDM,SAAAhI,GACnB,IAAMiI,EAAejI,EAAMiI,aAE3B,OACE,kBAACjC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYhH,UAAU,oBAAtB,aAGA,kBAACqH,EAAA,EAAD,KACE,kBAACrC,EAAA,EAAD,KACE,+BACGgE,EAAa1D,KAAI,SAAC2D,EAAU1B,GAC3B,OACE,wBAAI/K,IAAK+K,GACP,4BACE,kBAACzG,EAAA,EAAD,CAAOG,QAAS,YAAcsG,GAC5B,gCAASA,EAAO,KAGpB,4BACE,kBAAC7B,EAAA,EAAD,CACE9C,GAAI,YAAc2E,EAClB/K,IAAK+K,EACLmB,OAAK,EACLnK,KAAMgJ,EACNzJ,MAAOmL,EAAS1K,KAChBsH,SAAU9E,EAAMmI,yBAChBf,UAAQ,KAEZ,4BACE,kBAAClB,EAAA,EAAD,CACEC,MAAM,UACNC,QAAS,kBAAMpG,EAAMoI,mBAAmB5B,KACxC,uBAAGvH,UAAU,yBAS7B,kBAAC6I,EAAA,EAAD,KACE,kBAAC5B,EAAA,EAAD,CAAQC,MAAM,OAAOlH,UAAU,8BAA8BmH,QAASpG,EAAMqI,iBAA5E,Q,2BCvBA9E,EAAc4B,EAAQ,KAAtB5B,UA4SO+E,IA3SM,SAAAtI,GAAU,IAAD,EACIqF,mBAAS,IADb,mBACrBkD,EADqB,KACXC,EADW,KAEtBhD,EAAiC,SAAC1B,EAAO2B,EAAU1I,EAAO2I,GAC9D,IAAMC,EAAI,CAAExK,OAAQ,CAAEqC,KAAMiI,IACd,OAAV3B,EACF4B,EAAwBA,EAAsBnB,KAAI,SAACqB,EAAGxK,GAAJ,OAAUA,IAAM0I,EAAQ/G,EAAQ6I,KAElFF,EAAsB1K,KAAK,IAE7B2K,EAAExK,OAAO4B,MAAQ2I,EAAsBG,KAAKtC,GAC5CvD,EAAMwF,+BAA+BG,IAQjC5D,EAAW/B,EAAM+B,SACjB+D,EAAkB/D,GAAWA,EAAS0G,sBACxC1G,EAAS0G,sBACJ,GACH1C,EAAoBhE,GAAWA,EAAS2G,oCAC1C3G,EAAS2G,oCACJ,GACHjB,EAAe1F,GAAWA,EAAS4G,mBACrC5G,EAAS4G,mBACJ,GACHV,EAAelG,GAAWA,EAAS6G,sBACrC7G,EAAS6G,sBACJ,GACT,OACE,yBAAK3J,UAAU,mBACb,kBAAC8E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK1E,GAAI,IACP,kBAACuJ,EAAA,EAAD,CAAMhH,GAAI7B,EAAM8I,OAAQC,SAAU/I,EAAMgJ,cACtC,kBAAChD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,gCACE,uBAAGhH,UAAU,wBACZe,EAAMiJ,QAGX,kBAAC3C,EAAA,EAAD,KACE,kBAAC3C,EAAA,EAAD,KACE,kBAAC5D,EAAA,EAAD,CAAOG,QAAQ,QAAf,QACC6B,EACC,kBAAC4C,EAAA,EAAD,CACElH,KAAK,OACLD,KAAK,OACLqE,GAAG,OACH9E,MAAOgF,EAASvE,KAAOuE,EAASvE,KAAO,GACvCsH,SAAU9E,EAAMkJ,qBAChB/B,YAAY,uBACZC,UAAQ,IAEV,kBAACzC,EAAA,EAAD,CACElH,KAAK,OACLD,KAAK,OACLqE,GAAG,OACHsF,YAAY,uBACZC,UAAQ,KAEd,kBAACrD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK3E,GAAI,GACP,kBAACsE,EAAA,EAAD,KACE,kBAAC5D,EAAA,EAAD,CAAOG,QAAQ,QAAf,QACC6B,EACC,kBAAC4C,EAAA,EAAD,CACElH,KAAK,OACLD,KAAK,OACLqE,GAAG,OACH9E,MAAOgF,EAASkF,KAAOlF,EAASkF,KAAO,GACvCnC,SAAU9E,EAAMkJ,qBAChB/B,YAAY,uBACZC,UAAQ,IAEV,kBAACzC,EAAA,EAAD,CACElH,KAAK,OACLD,KAAK,OACLqE,GAAG,OACHsF,YAAY,uBACZC,UAAQ,MAIhB,kBAACpD,EAAA,EAAD,CAAK3E,GAAI,GACP,kBAACsE,EAAA,EAAD,KACE,kBAAC5D,EAAA,EAAD,CAAOG,QAAQ,YAAf,UACC6B,EACC,kBAAC4C,EAAA,EAAD,CACElH,KAAK,SACLD,KAAK,WACLqE,GAAG,WACH9E,MAAOgF,EAASoH,SAAWpH,EAASoH,SAAW,GAC/CzF,UAAW1D,EAAMoJ,YAAYC,aAAerJ,EAAMoJ,YAAYC,WAC9DvE,SAAU9E,EAAMkJ,qBAChB9B,UAAQ,GACR,4BAAQrK,MAAM,SAAd,YACA,4BAAQA,MAAM,QAAd,WAGF,kBAAC4H,EAAA,EAAD,CACElH,KAAK,SACLD,KAAK,WACLqE,GAAG,WACH6B,UAAW1D,EAAMoJ,YAAYC,aAAerJ,EAAMoJ,YAAYC,WAC9DjC,UAAQ,GACR,4BAAQrK,MAAM,SAAd,YACA,4BAAQA,MAAM,QAAd,eAOZ,kBAAC+K,EAAA,EAAD,KACE,kBAAC5B,EAAA,EAAD,CACErE,GAAG,+BACHpE,KAAK,SACLY,KAAK,KACL8H,MAAM,WACN,uBAAGlH,UAAU,uBALf,UAQA,kBAACiH,EAAA,EAAD,CAAQjH,UAAU,OAAOxB,KAAK,QAAQY,KAAK,KAAK8H,MAAM,UACpD,uBAAGlH,UAAU,cADf,YAKHe,EAAMsJ,OACL,kBAAC,IAAM1C,SAAP,KACGd,EAAgBvB,KAAI,SAACV,EAAgB2C,GACpC,IAAMf,EAAW,QAAUe,EACrBE,EAAqB7C,EAAerG,KAAKmJ,MAAMpD,GACrD,MAA4B,UAAxBM,EAAepG,KAEf,kBAACuI,EAAA,EAAD,CAAMvK,IAAK+K,GACT,kBAACP,EAAA,EAAD,KACE,kBAAClC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAK3E,GAAI,GACP,kBAACwH,EAAA,EAAD,CAAY5H,UAAU,QACpB,kBAAC6H,EAAA,EAAD,CAAiBC,UAAU,WACzB,kBAACb,EAAA,EAAD,CAAQC,MAAM,UAAU1I,KAAK,UAA7B,SAIF,kBAACkH,EAAA,EAAD,CACElH,KAAK,OACLwB,UAAU,cACVmF,MAAO,CAAE4C,MAAO,KAChBxJ,KAAM,QAAUgJ,EAChBzJ,MAAO8G,EAAeoD,KAAOpD,EAAeoD,KAAO,GACnDnC,SAAU9E,EAAMkH,+BAChBC,YAAY,6BACZC,UAAQ,KAEXV,EAAmBnC,KAAI,SAAC/G,EAAMpC,GAC7B,OACE,kBAACyL,EAAA,EAAD,CAAY5H,UAAU,OAAOxD,IAAKL,GAChC,kBAACuJ,EAAA,EAAD,CACEyC,UAAQ,EACRnI,UAAWzB,EAAO,mBAAqB,GACvC/B,IAAK,qBAAuB+K,EAC5BhJ,KAAMiI,EACN1I,MAAOS,EACP2J,YAAY,kBACZrC,SAAU,SAAAa,GAAC,OAAIH,EAA+BpK,EAAGqK,EAAUE,EAAExK,OAAO4B,MAAO2J,MAE7E,kBAACI,EAAA,EAAD,CAAiBC,UAAU,UACzB,kBAACb,EAAA,EAAD,CAAQzI,KAAK,SAAS0I,MAAM,SAASC,QAAS,kBA9J3C,SAACtC,EAAO2B,EAAUC,GACvD,IAAMC,EAAI,CAAExK,OAAQ,CAAEqC,KAAMiI,IAC5BC,EAAwBA,EAAsB9K,QAAO,SAACgL,EAAGxK,GAAJ,OAAUA,IAAM0I,EAAQ,EAAI,KACjF6B,EAAExK,OAAO4B,MAAQ2I,EAAsBG,KAAKtC,GAC5CvD,EAAMwF,+BAA+BG,GA0JiD0B,CAA+BjM,EAAGqK,EAAUiB,KAC9F,uBAAGzH,UAAU,sBAMvB,kBAACiH,EAAA,EAAD,CAAQjH,UAAU,aAAakH,MAAM,UAAU9H,KAAK,KAAK+H,QAAS,WAChEZ,EAA+B,KAAMC,EAAU,GAAIiB,KADrD,MAMF,kBAAC1C,EAAA,EAAD,MACA,kBAACA,EAAA,EAAD,CAAK3E,GAAI,GACP,kBAAC0E,EAAA,EAAD,KACE,kBAACY,EAAA,EAAD,CACE5H,MAAO8G,EAAe0F,WACtBzE,SAAU9E,EAAMwF,+BAChBhI,KAAM,cAAgBgJ,EACtB/I,KAAK,UACJuC,EAAMwJ,UAAUjF,KAAI,SAAAkF,GAAC,OACpB,4BAAQhO,IAAKgO,EAAE5H,GAAI9E,MAAO0M,EAAE5H,IAAK4H,EAAEhM,WAIzC,kBAACsG,EAAA,EAAD,CAAK9E,UAAU,uBACb,kBAACiH,EAAA,EAAD,CACEjH,UAAU,wBACVkH,MAAM,OACNC,QAAS,WACPmC,EAAS/B,IAAS+B,EAAS/B,GAC3BgC,EAAY,eAAKD,MAEnB,uBAAGtJ,UAAU,gBAEf,kBAACiH,EAAA,EAAD,CACE7H,KAAK,KACLY,UAAU,wBACVkH,MAAM,SACNC,QAAS,WACPpG,EAAMqG,0BAA0B,QAASG,KAE3C,uBAAGvH,UAAU,qBAMvB,kBAACyK,EAAA,EAAD,CAAUC,OAAQpB,EAAS/B,IACzB,kBAACF,EAAA,EAAD,KACE,kBAAC,EAAD,CACE7K,IAAK,WAAa+K,EAClB1C,MAAO0C,EACPlC,YAAatE,EAAMsE,YACnBU,QAAShF,EAAMgF,QACfnB,eAAgBA,EAChBiB,SAAU9E,EAAM4J,0BAMrB,QAGT,kBAAC7F,EAAA,EAAD,CAAK9E,UAAU,QACb,kBAAC+E,EAAA,EAAD,CAAK7E,GAAI,GACP,kBAACwF,EAAA,EAAD,CAAOlH,KAAK,SAASoE,GAAG,OAAO6B,SAAU1D,EAAM6J,iBAC7C,4BAAQ9M,MAAM,SAAd,SACCiD,EAAM6J,gBACL,KACA,4BAAQ9M,MAAM,YAAd,cAIN,kBAACiH,EAAA,EAAD,CAAK7E,GAAI,GACP,kBAAC+G,EAAA,EAAD,CACEC,MAAM,OACNlH,UAAU,aACVmH,QAASpG,EAAM8J,4BAHjB,OASJ,kBAACJ,EAAA,EAAD,CAAUC,OAAQ3J,EAAM6J,iBACtB,kBAAC,EAAD,CAEExD,0BAA2BrG,EAAMqG,0BACjC5K,IAAKqK,EAAgBjE,GACrByC,YAAatE,EAAMsE,YACnBU,QAAShF,EAAMgF,QACfF,SAAU9E,EAAM4J,qBAChBpE,+BAAgCxF,EAAMwF,+BACtC0B,+BAAgClH,EAAMkH,+BACtCI,gBAAiBtH,EAAMsH,gBACvByC,WAAYhI,EAASF,GACrBkE,kBAAmBA,EACnBD,gBAAiBA,KAGrB,6BAEA,kBAAC,EAAD,CACErK,IAAKgM,EAAa5F,GAClB4F,aAAcA,EACdG,oBAAqB5H,EAAM4H,oBAC3BG,eAAgB/H,EAAM+H,eACtBF,kBAAmB7H,EAAM6H,oBAE3B,6BAEA,kBAAC,EAAD,CACEI,aAAcA,EACdE,yBACEnI,EAAMmI,yBAERE,gBAAiBrI,EAAMqI,gBACvBD,mBAAoBpI,EAAMoI,sBAE5B,W,wICtTV4B,E,YAEF,WAAYhK,GAAQ,IAAD,8BACf,4CAAMA,KAIViK,MAAQ,CACJC,UAAW,IANI,EASnBlB,aAAe,SAAArD,GACXA,EAAEwE,iBACF,IAAM9M,EAAOH,YAAYyI,GACzBxD,YAAY9E,GAAM,SAACL,EAAKwE,GAChBxE,GACJ,EAAKgD,MAAMoK,QAAQpP,KAAK,mBAZ5B,EAAKgO,aAAe,EAAKA,aAAaqB,KAAlB,gBAFL,E,sEAoBf,OACI,kBAAC,IAAD,eACIpB,MAAM,gBACND,aAAcsB,KAAKtB,aACnBkB,UAAWI,KAAKL,MAAMC,WAClBI,KAAKtK,Y,GA3BCuK,aAgCXP","file":"static/js/22.b7ae59e6.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","const getFormData = event => {\r\n    const formData = {};\r\n    const form = event.target;\r\n    for (let i = 0; i < form.length; i++) {\r\n        const element = form.elements[i];\r\n        const name = element.name;\r\n        const value = element.value;\r\n        const type = element.type;\r\n        if (value) {\r\n            switch (type) {\r\n                case \"checkbox\":\r\n                    formData[name] = element.checked;\r\n                    break;\r\n                default:\r\n                    formData[name] = value;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    return formData;\r\n}\r\n\r\nconst loadDataInsideForm = (object) => {\r\n    if (!object) return;\r\n    const keys = Object.keys(object);\r\n    keys.forEach(key => {\r\n        const value = object[key];\r\n        const element = document.getElementById(key);\r\n        if (element) {\r\n            element.checked = value;\r\n            element.value = value;\r\n        }\r\n    });\r\n}\r\n\r\nexport {\r\n    getFormData,\r\n    loadDataInsideForm,\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;","import { server } from '../../config/server';\r\n\r\nconst url = '/risk-areas';\r\n\r\nfunction getLikelihoodAndImpacts(callback) {\r\n    server\r\n        .get(`/likelihood-impact`)\r\n        .then(function (json) {\r\n            callback(null, json.data);\r\n        })\r\n        .catch(function (err) {\r\n            callback(err);\r\n        });\r\n}\r\n\r\nfunction getRiskAreas(callback) {\r\n    server.get(\r\n        `${url}`,\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nfunction getRiskAreaCodes(callback) {\r\n    server.get(\r\n        `${url}/code`,\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nfunction getRiskArea(id, callback) {\r\n    server.get(\r\n        `${url}/${id}`,\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nfunction editRiskArea(riskArea, callback) {\r\n    server.put(\r\n        `${url}/${riskArea.id}`,\r\n        riskArea\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nfunction editRiskAreaCodes(riskAreaCodes, callback) {\r\n    server.put(\r\n        `${url}/code`,\r\n        riskAreaCodes\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nfunction addRiskArea(riskArea, callback) {\r\n    server.post(\r\n        `${url}`,\r\n        riskArea\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nfunction deleteRiskArea(id, callback) {\r\n    server.delete(\r\n        `${url}/${id}`,\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nexport {\r\n    getLikelihoodAndImpacts,\r\n    getRiskArea,\r\n    getRiskAreas,\r\n    getRiskAreaCodes,\r\n    editRiskAreaCodes,\r\n    editRiskArea,\r\n    addRiskArea,\r\n    deleteRiskArea,\r\n}","function populateLikelihoodTable(riskParticularLikelihoodRules, likelihoodId) {\r\n  if (riskParticularLikelihoodRules && likelihoodId) {\r\n    const rule = riskParticularLikelihoodRules.filter(l =>\r\n      Number(l.likelihoodId) === likelihoodId ? 1 : 0\r\n    )[0];\r\n    return rule ? rule : {};\r\n  }\r\n  return {};\r\n}\r\n\r\nfunction populateImpactTable(riskParticularImpacts, impactId) {\r\n  if (riskParticularImpacts && impactId) {\r\n    const imapctRule = riskParticularImpacts.filter(l =>\r\n      Number(l.impactId) === impactId ? 1 : 0\r\n    )[0];\r\n    return imapctRule ? imapctRule : {};\r\n  }\r\n  return {}\r\n}\r\n\r\nfunction populateInstanceLikelihoodTable(riskParticularLikelihood, likelihoodId) {\r\n  if (riskParticularLikelihood && likelihoodId) {\r\n    const likelihoodRule = riskParticularLikelihood.filter(l => l.likelihoodId === likelihoodId ? 1 : 0)[0];\r\n    return likelihoodRule ? likelihoodRule : {}\r\n  }\r\n  return {}\r\n}\r\n\r\nfunction populateInstanceImpactTable(riskParticularImpact, impactId) {\r\n  if (riskParticularImpact && impactId) {\r\n    const impactRule = riskParticularImpact.filter(l => l.impactId === impactId ? 1 : 0)[0];\r\n    return impactRule ? impactRule : {}\r\n  }\r\n  return {}\r\n}\r\n\r\nconst splitText = \"|||\"\r\n\r\nexport { populateLikelihoodTable, populateImpactTable, populateInstanceImpactTable, populateInstanceLikelihoodTable, splitText };\r\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import React from \"react\";\r\nimport { Col, Row, Table, Input } from \"reactstrap\";\r\nimport { populateLikelihoodTable, populateImpactTable } from \"./util\";\r\n\r\nconst RiskRuleRange = props => {\r\n  const riskParticular = props.riskParticular;\r\n  const index = props.index;\r\n  return (\r\n    <Row>\r\n      <Col lg={6}>\r\n        <Table\r\n          striped\r\n          responsive>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ minWidth: '150px' }}>Likelihood</th>\r\n              <th style={{ minWidth: '150px' }}>Lower Limit</th>\r\n              <th style={{ minWidth: '150px' }}>Upper Limit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.likelihoods.map((likelihood, idx) => {\r\n              const likelihoodRule = populateLikelihoodTable(\r\n                riskParticular.risk_area_likelihood_rules,\r\n                likelihood.id\r\n              );\r\n              return (\r\n                <tr key={idx}>\r\n                  <td key={likelihood.name + idx}>{likelihood.name}</td>\r\n                  <td>\r\n                    <Input\r\n                      name={\r\n                        riskParticular.type +\r\n                        \"-\" +\r\n                        index +\r\n                        \"-likelihood-lower-\" +\r\n                        likelihood.id\r\n                      }\r\n                      key={likelihood.id}\r\n                      value={likelihoodRule.lowerLimit ? Number(likelihoodRule.lowerLimit).toLocaleString('en') : ''}\r\n                      onChange={props.onChange}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <Input\r\n                      name={\r\n                        riskParticular.type +\r\n                        \"-\" +\r\n                        index +\r\n                        \"-likelihood-upper-\" +\r\n                        likelihood.id\r\n                      }\r\n                      key={likelihood.id}\r\n                      value={likelihoodRule.upperLimit ? Number(likelihoodRule.upperLimit).toLocaleString('en') : ''}\r\n                      onChange={props.onChange}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n\r\n      </Col>\r\n      <Col lg={6}>\r\n        <Table\r\n          striped\r\n          responsive>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ minWidth: '150px' }}>Impact</th>\r\n              <th style={{ minWidth: '150px' }}>Lower Limit</th>\r\n              <th style={{ minWidth: '150px' }}>Upper Limit</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {props.impacts.map((impact, idx) => {\r\n              const impactRule = populateImpactTable(\r\n                riskParticular.risk_area_impact_rules,\r\n                impact.id\r\n              );\r\n              return (\r\n                <tr key={idx}>\r\n                  <td key={impact.name + idx}>{impact.name}</td>\r\n                  <td key={impact.id}>\r\n                    <Input\r\n                      value={impactRule.lowerLimit ? Number(impactRule.lowerLimit).toLocaleString('en') : ''}\r\n                      name={\r\n                        riskParticular.type +\r\n                        \"-\" +\r\n                        index +\r\n                        \"-impact-lower-\" +\r\n                        impact.id\r\n                      }\r\n                      key={impact.id}\r\n                      onChange={props.onChange}\r\n                    />\r\n                  </td>\r\n                  <td>\r\n                    <Input\r\n                      value={impactRule.upperLimit ? Number(impactRule.upperLimit).toLocaleString('en') : ''}\r\n                      name={\r\n                        riskParticular.type +\r\n                        \"-\" +\r\n                        index +\r\n                        \"-impact-upper-\" +\r\n                        impact.id\r\n                      }\r\n                      key={impact.id}\r\n                      onChange={props.onChange}\r\n                    />\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default RiskRuleRange;\r\n","import React, { useState } from \"react\";\r\nimport { Card, CardHeader, CardBody, InputGroup, InputGroupAddon, Input, Row, Col, Table, Button } from \"reactstrap\";\r\nconst { splitText } = require('./util');\r\n\r\nconst RiskRuleInstance = props => {\r\n  const [btnHidden, setButtonAddFlag] = useState({});\r\n  const handleRiskParticularNameChange = (index, propName, value, riskParticularArrName) => {\r\n    const e = { target: { name: propName } };\r\n    if (index !== null) {\r\n      riskParticularArrName = riskParticularArrName.map((r, i) => i === index ? value : r);\r\n    } else {\r\n      riskParticularArrName.push(\"\");\r\n    }\r\n    e.target.value = riskParticularArrName.join(splitText);\r\n    props.handleRiskParticularNameChange(e);\r\n  }\r\n  const handleRiskParticularNameDelete = (index, propName, riskParticularArrName) => {\r\n    const e = { target: { name: propName } };\r\n    riskParticularArrName = riskParticularArrName.filter((r, i) => i === index ? 0 : 1);\r\n    e.target.value = riskParticularArrName.join(splitText);\r\n    props.handleRiskParticularNameChange(e);\r\n  }\r\n  const riskParticulars = props.riskParticulars;\r\n  const riskInstanceRules = props.riskInstanceRules;\r\n  return (\r\n    <Card>\r\n      <CardHeader>\r\n        <Row>\r\n          <Col>\r\n            <strong>\r\n              Risk Rule Instance\r\n            </strong>\r\n          </Col>\r\n          <Col>\r\n            <Button\r\n              size=\"sm\"\r\n              className=\"text-white\"\r\n              color=\"danger\"\r\n              onClick={() => {\r\n                props.deleteRiskParticularTable(\"instance\", null)\r\n                setButtonAddFlag({});\r\n              }}>\r\n              <i className='fa fa-trash' />\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Row>\r\n          <Col lg={6}>\r\n            <Table striped responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Likelihood</th>\r\n                  <th scope=\"col\">Lower Limit</th>\r\n                  <th scope=\"col\">Upper Limit</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {props.likelihoods.map((likelihood, idx) => {\r\n                  let likelihoodRule = riskInstanceRules.filter(r => Number(r.likelihoodId) === likelihood.id ? 1 : 0)[0];\r\n                  likelihoodRule = likelihoodRule ? likelihoodRule : {};\r\n                  return (\r\n                    <tr key={idx}>\r\n                      <td>{likelihood.name}</td>\r\n                      <td>\r\n                        <Input\r\n                          name={\r\n                            \"instance-\" +\r\n                            idx +\r\n                            \"-likelihood-lower-\" +\r\n                            likelihood.id\r\n                          }\r\n                          key={likelihood.id}\r\n                          value={likelihoodRule.lowerLimit ? likelihoodRule.lowerLimit : ''}\r\n                          onChange={props.onChange} />\r\n                      </td>\r\n                      <td>\r\n                        <Input\r\n                          name={\r\n                            \"instance-\" +\r\n                            idx +\r\n                            \"-likelihood-upper-\" +\r\n                            likelihood.id\r\n                          }\r\n                          key={likelihood.id}\r\n                          value={likelihoodRule.upperLimit ? likelihoodRule.upperLimit : ''}\r\n                          onChange={props.onChange} />\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n          <Col lg={6}>\r\n            <Table striped responsive>\r\n              <thead>\r\n                <tr>\r\n                  <th scope=\"col\">Impact</th>\r\n                  <th scope=\"col\">Instance</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {props.impacts.map((impact, idx) => {\r\n                  return (\r\n                    <tr key={idx}>\r\n                      <th key={impact.name + idx}>{impact.name}</th>\r\n                      <td key={impact.id}>\r\n                        {riskParticulars.map((riskParticular, indx) => {\r\n                          const riskImpact = riskParticular\r\n                            .risk_area_impact_rules[0]\r\n                            ? riskParticular.risk_area_impact_rules[0]\r\n                            : {};\r\n                          const propName = \"name-\" + indx;\r\n                          const riskParticularName = riskParticular.name.split(splitText);\r\n                          if (\r\n                            riskParticular.type === \"instance\" &&\r\n                            riskImpact.impactId === impact.id\r\n                          ) {\r\n                            if (!btnHidden[impact.id]) {\r\n                              btnHidden[impact.id] = true;\r\n                              setButtonAddFlag({ ...btnHidden });\r\n                            }\r\n                            return (\r\n                              <React.Fragment key={indx}>\r\n                                <InputGroup className=\"mb-2\">\r\n                                  <InputGroupAddon addonType=\"prepend\">\r\n                                    <Button color=\"primary\" type=\"button\">\r\n                                      Code\r\n                                  </Button>\r\n                                  </InputGroupAddon>\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    className=\"font-italic\"\r\n                                    style={{ width: 150 }}\r\n                                    name={\"code-\" + indx}\r\n                                    value={riskParticular.code ? riskParticular.code : \"\"}\r\n                                    onChange={props.handleRiskParticularCodeChange}\r\n                                    placeholder=\"Enter Risk Particular Code\"\r\n                                    required />\r\n                                </InputGroup>\r\n                                {riskParticularName.map((name, i) => {\r\n                                  return (\r\n                                    <InputGroup className=\"mb-2\" key={i}>\r\n                                      <Input\r\n                                        required\r\n                                        className={name ? \"font-weight-bold\" : \"\"}\r\n                                        key={\"riskParticularName\" + indx}\r\n                                        name={propName}\r\n                                        value={name}\r\n                                        placeholder=\"Detail of Error\"\r\n                                        onChange={e => handleRiskParticularNameChange(i, propName, e.target.value, riskParticularName)}\r\n                                      />\r\n                                      <InputGroupAddon addonType=\"append\">\r\n                                        <Button type=\"button\" color=\"danger\" onClick={() => handleRiskParticularNameDelete(i, propName, riskParticularName)}>\r\n                                          <i className=\"fa fa-trash\"></i>\r\n                                        </Button>\r\n                                      </InputGroupAddon>\r\n                                    </InputGroup>\r\n                                  )\r\n                                })}\r\n                                <Button className=\"text-white\" color=\"warning\" size=\"sm\" onClick={() => {\r\n                                  handleRiskParticularNameChange(null, propName, \"\", riskParticularName);\r\n                                }}>\r\n                                  +\r\n                              </Button>\r\n                              </React.Fragment>\r\n                            );\r\n                          }\r\n                          return null;\r\n                        })}\r\n                        {btnHidden[impact.id] ?\r\n                          null :\r\n                          <Button\r\n                            id={\"impact-add-button\" + impact.id}\r\n                            key={idx}\r\n                            color=\"primary\"\r\n                            className=\"ml-1\"\r\n                            onClick={e => {\r\n                              props.handleAddImpact(impact.id);\r\n                              e.target.display = \"none\"\r\n                            }}>\r\n                            +\r\n                        </Button>\r\n                        }\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default RiskRuleInstance;\r\n","import React from \"react\";\r\nimport { Card, CardHeader, CardBody, CardFooter, Input, Table, Label, Button } from \"reactstrap\";\r\n\r\nconst RiskTrigger = props => {\r\n  const riskTriggers = props.riskTriggers;\r\n  return (\r\n    <Card>\r\n      <CardHeader className=\"font-weight-bold\">\r\n        Risk Triggers\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Table>\r\n          <tbody>\r\n            {riskTriggers.map((riskTrigger, indx) => {\r\n              return (\r\n                <tr key={indx}>\r\n                  <td>\r\n                    <Label htmlFor={\"trigger-\" + indx}>\r\n                      <strong>{indx + 1}</strong>\r\n                    </Label>\r\n                  </td>\r\n                  <td>\r\n                    <Input\r\n                      id={\"trigger-\" + indx}\r\n                      key={indx}\r\n                      valid\r\n                      name={indx}\r\n                      value={riskTrigger.name}\r\n                      onChange={props.handleTriggerChange}\r\n                      required />\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={() => props.deleteRiskTrigger(indx)}>\r\n                      <i className=\"fa fa-trash\" />\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </CardBody>\r\n      <CardFooter>\r\n        <Button color=\"info\" className=\"font-weight-bold text-white\" onClick={props.addRiskTrigger}>\r\n          +\r\n        </Button>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RiskTrigger;\r\n","import React from \"react\";\r\nimport { Card, CardHeader, CardBody, CardFooter, Input, Table, Label, Button } from \"reactstrap\";\r\n\r\nconst RiskTracedBy = props => {\r\n  const riskTracedBy = props.riskTracedBy;\r\n\r\n  return (\r\n    <Card>\r\n      <CardHeader className=\"font-weight-bold\">\r\n        Traced By\r\n      </CardHeader>\r\n      <CardBody>\r\n        <Table>\r\n          <tbody>\r\n            {riskTracedBy.map((tracedBy, indx) => {\r\n              return (\r\n                <tr key={indx}>\r\n                  <td>\r\n                    <Label htmlFor={\"tracedBy-\" + indx}>\r\n                      <strong>{indx + 1}</strong>\r\n                    </Label>\r\n                  </td>\r\n                  <td>\r\n                    <Input\r\n                      id={\"tracedBy-\" + indx}\r\n                      key={indx}\r\n                      valid\r\n                      name={indx}\r\n                      value={tracedBy.name}\r\n                      onChange={props.handleRiskTracedByChange}\r\n                      required />\r\n                  </td>\r\n                  <td>\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={() => props.deleteRiskTracedBy(indx)}>\r\n                      <i className=\"fa fa-trash\" />\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })}\r\n          </tbody>\r\n        </Table>\r\n      </CardBody>\r\n      <CardFooter>\r\n        <Button color=\"info\" className=\"font-weight-bold text-white\" onClick={props.addRiskTracedBy}>\r\n          +\r\n        </Button>\r\n      </CardFooter>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default RiskTracedBy;\r\n","import React, { useState } from \"react\";\r\nimport RiskRuleRange from \"./RiskParticularRuleRange\";\r\n//eslint-disable-next-line\r\nimport RiskRuleInstance from \"./RiskParticularRuleInstance\";\r\nimport RiskTrigger from \"./RiskTrigger\";\r\nimport RiskTracedBy from './RiskTracedBy';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Collapse,\r\n  CardFooter,\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Input,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  Form,\r\n  FormGroup,\r\n  Label\r\n} from \"reactstrap\";\r\n\r\nconst { splitText } = require('./util');\r\nconst RiskAreaForm = props => {\r\n  const [collapse, setCollapse] = useState({});\r\n  const handleRiskParticularNameChange = (index, propName, value, riskParticularArrName) => {\r\n    const e = { target: { name: propName } };\r\n    if (index !== null) {\r\n      riskParticularArrName = riskParticularArrName.map((r, i) => i === index ? value : r);\r\n    } else {\r\n      riskParticularArrName.push(\"\");\r\n    }\r\n    e.target.value = riskParticularArrName.join(splitText);\r\n    props.handleRiskParticularNameChange(e);\r\n  }\r\n  const handleRiskParticularNameDelete = (index, propName, riskParticularArrName) => {\r\n    const e = { target: { name: propName } };\r\n    riskParticularArrName = riskParticularArrName.filter((r, i) => i === index ? 0 : 1);\r\n    e.target.value = riskParticularArrName.join(splitText);\r\n    props.handleRiskParticularNameChange(e);\r\n  }\r\n  const riskArea = props.riskArea;\r\n  const riskParticulars = riskArea ? riskArea.risk_area_particulars\r\n    ? riskArea.risk_area_particulars\r\n    : [] : [];\r\n  const riskInstanceRules = riskArea ? riskArea.risk_area_likelihood_instance_rules\r\n    ? riskArea.risk_area_likelihood_instance_rules\r\n    : [] : [];\r\n  const riskTriggers = riskArea ? riskArea.risk_area_triggers\r\n    ? riskArea.risk_area_triggers\r\n    : [] : [];\r\n  const riskTracedBy = riskArea ? riskArea.risk_area_traced_bies\r\n    ? riskArea.risk_area_traced_bies\r\n    : [] : [];\r\n  return (\r\n    <div className=\"animated fadeIn\">\r\n      <Row>\r\n        <Col lg={12}>\r\n          <Form id={props.formId} onSubmit={props.handleSubmit}>\r\n            <Card>\r\n              <CardHeader>\r\n                <strong>\r\n                  <i className=\"icon-briefcase pr-2\"></i>\r\n                  {props.title}\r\n                </strong>\r\n              </CardHeader>\r\n              <CardBody>\r\n                <FormGroup>\r\n                  <Label htmlFor=\"name\">Name</Label>\r\n                  {riskArea ?\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      value={riskArea.name ? riskArea.name : \"\"}\r\n                      onChange={props.handleRiskAreaChange}\r\n                      placeholder=\"Enter Risk Area Name\"\r\n                      required />\r\n                    :\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      id=\"name\"\r\n                      placeholder=\"Enter Risk Area Name\"\r\n                      required />}\r\n                </FormGroup>\r\n                <Row>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"code\">Code</Label>\r\n                      {riskArea ?\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"code\"\r\n                          id=\"code\"\r\n                          value={riskArea.code ? riskArea.code : \"\"}\r\n                          onChange={props.handleRiskAreaChange}\r\n                          placeholder=\"Enter Risk Area Code\"\r\n                          required />\r\n                        :\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"code\"\r\n                          id=\"code\"\r\n                          placeholder=\"Enter Risk Area Code\"\r\n                          required />\r\n                      }\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"isActive\">Status</Label>\r\n                      {riskArea ?\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"isActive\"\r\n                          id=\"isActive\"\r\n                          value={riskArea.isActive ? riskArea.isActive : \"\"}\r\n                          disabled={!props.permissions.isApprover || !props.permissions.isApprover}\r\n                          onChange={props.handleRiskAreaChange}\r\n                          required>\r\n                          <option value=\"false\">Inactive</option>\r\n                          <option value=\"true\">Active</option>\r\n                        </Input>\r\n                        :\r\n                        <Input\r\n                          type=\"select\"\r\n                          name=\"isActive\"\r\n                          id=\"isActive\"\r\n                          disabled={!props.permissions.isApprover || !props.permissions.isApprover}\r\n                          required >\r\n                          <option value=\"false\">Inactive</option>\r\n                          <option value=\"true\">Active</option>\r\n                        </Input>\r\n                      }\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button\r\n                  id=\"submit-button-risk-area-form\"\r\n                  type=\"submit\"\r\n                  size=\"sm\"\r\n                  color=\"success\">\r\n                  <i className=\"fa fa-dot-circle-o\"></i>\r\n                  Submit\r\n                </Button>\r\n                <Button className=\"ml-2\" type=\"reset\" size=\"sm\" color=\"danger\">\r\n                  <i className=\"fa fa-ban\"></i> Reset\r\n                </Button>\r\n              </CardFooter>\r\n            </Card>\r\n            {props.isEdit ? (\r\n              <React.Fragment>\r\n                {riskParticulars.map((riskParticular, indx) => {\r\n                  const propName = \"name-\" + indx;\r\n                  const riskParticularName = riskParticular.name.split(splitText);\r\n                  if (riskParticular.type === \"range\") {\r\n                    return (\r\n                      <Card key={indx}>\r\n                        <CardHeader>\r\n                          <Row>\r\n                            <Col md={6}>\r\n                              <InputGroup className=\"mb-2\">\r\n                                <InputGroupAddon addonType=\"prepend\">\r\n                                  <Button color=\"primary\" type=\"button\">\r\n                                    Code\r\n                                  </Button>\r\n                                </InputGroupAddon>\r\n                                <Input\r\n                                  type=\"text\"\r\n                                  className=\"font-italic\"\r\n                                  style={{ width: 150 }}\r\n                                  name={\"code-\" + indx}\r\n                                  value={riskParticular.code ? riskParticular.code : \"\"}\r\n                                  onChange={props.handleRiskParticularCodeChange}\r\n                                  placeholder=\"Enter Risk Particular Code\"\r\n                                  required />\r\n                              </InputGroup>\r\n                              {riskParticularName.map((name, i) => {\r\n                                return (\r\n                                  <InputGroup className=\"mb-2\" key={i}>\r\n                                    <Input\r\n                                      required\r\n                                      className={name ? \"font-weight-bold\" : \"\"}\r\n                                      key={\"riskParticularName\" + indx}\r\n                                      name={propName}\r\n                                      value={name}\r\n                                      placeholder=\"Detail of Error\"\r\n                                      onChange={e => handleRiskParticularNameChange(i, propName, e.target.value, riskParticularName)}\r\n                                    />\r\n                                    <InputGroupAddon addonType=\"append\">\r\n                                      <Button type=\"button\" color=\"danger\" onClick={() => handleRiskParticularNameDelete(i, propName, riskParticularName)}>\r\n                                        <i className=\"fa fa-trash\"></i>\r\n                                      </Button>\r\n                                    </InputGroupAddon>\r\n                                  </InputGroup>\r\n                                )\r\n                              })}\r\n                              <Button className=\"text-white\" color=\"warning\" size=\"sm\" onClick={() => {\r\n                                handleRiskParticularNameChange(null, propName, \"\", riskParticularName);\r\n                              }}>\r\n                                +\r\n                              </Button>\r\n                            </Col>\r\n                            <Col />\r\n                            <Col md={4}>\r\n                              <Row>\r\n                                <Input\r\n                                  value={riskParticular.baseUnitId}\r\n                                  onChange={props.handleRiskParticularNameChange}\r\n                                  name={\"baseUnitId-\" + indx}\r\n                                  type=\"select\">\r\n                                  {props.baseUnits.map(b =>\r\n                                    <option key={b.id} value={b.id}>{b.type}</option>\r\n                                  )}\r\n                                </Input>\r\n                              </Row>\r\n                              <Row className=\"justify-content-end\">\r\n                                <Button\r\n                                  className=\"text-white btn-sm m-1\"\r\n                                  color=\"info\"\r\n                                  onClick={() => {\r\n                                    collapse[indx] = !collapse[indx];\r\n                                    setCollapse({ ...collapse });\r\n                                  }}>\r\n                                  <i className=\"fa fa-bars\" />\r\n                                </Button>\r\n                                <Button\r\n                                  size=\"sm\"\r\n                                  className=\"text-white btn-sm m-1\"\r\n                                  color=\"danger\"\r\n                                  onClick={() => {\r\n                                    props.deleteRiskParticularTable(\"range\", indx)\r\n                                  }}>\r\n                                  <i className='fa fa-trash' />\r\n                                </Button>\r\n                              </Row>\r\n                            </Col>\r\n                          </Row>\r\n                        </CardHeader>\r\n                        <Collapse isOpen={collapse[indx]}>\r\n                          <CardBody>\r\n                            <RiskRuleRange\r\n                              key={\"riskRule\" + indx}\r\n                              index={indx}\r\n                              likelihoods={props.likelihoods}\r\n                              impacts={props.impacts}\r\n                              riskParticular={riskParticular}\r\n                              onChange={props.handleChangeRiskRule} />\r\n                          </CardBody>\r\n                        </Collapse>\r\n                      </Card>\r\n                    )\r\n                  }\r\n                  return null;\r\n                })}\r\n\r\n                <Row className=\"mb-2\">\r\n                  <Col xs={5}>\r\n                    <Input type=\"select\" id=\"type\" disabled={props.instanceVisible}>\r\n                      <option value=\"range\">Range</option>\r\n                      {props.instanceVisible ?\r\n                        null :\r\n                        <option value=\"instance\">Instance</option>\r\n                      }\r\n                    </Input>\r\n                  </Col>\r\n                  <Col xs={4}>\r\n                    <Button\r\n                      color=\"info\"\r\n                      className=\"text-white\"\r\n                      onClick={props.addRiskAreaParticularTable}>\r\n                      +\r\n                      </Button>\r\n                  </Col>\r\n                </Row>\r\n\r\n                <Collapse isOpen={props.instanceVisible}>\r\n                  <RiskRuleInstance\r\n                    //RISK PARTICULAR TABLE DELETE\r\n                    deleteRiskParticularTable={props.deleteRiskParticularTable}\r\n                    key={riskParticulars.id}\r\n                    likelihoods={props.likelihoods}\r\n                    impacts={props.impacts}\r\n                    onChange={props.handleChangeRiskRule}\r\n                    handleRiskParticularNameChange={props.handleRiskParticularNameChange}\r\n                    handleRiskParticularCodeChange={props.handleRiskParticularCodeChange}\r\n                    handleAddImpact={props.handleAddImpact}\r\n                    riskAreaId={riskArea.id}\r\n                    riskInstanceRules={riskInstanceRules}\r\n                    riskParticulars={riskParticulars} />\r\n                </Collapse>\r\n\r\n                <hr />\r\n\r\n                <RiskTrigger\r\n                  key={riskTriggers.id}\r\n                  riskTriggers={riskTriggers}\r\n                  handleTriggerChange={props.handleTriggerChange}\r\n                  addRiskTrigger={props.addRiskTrigger}\r\n                  deleteRiskTrigger={props.deleteRiskTrigger} />\r\n\r\n                <hr />\r\n\r\n                <RiskTracedBy\r\n                  riskTracedBy={riskTracedBy}\r\n                  handleRiskTracedByChange={\r\n                    props.handleRiskTracedByChange\r\n                  }\r\n                  addRiskTracedBy={props.addRiskTracedBy}\r\n                  deleteRiskTracedBy={props.deleteRiskTracedBy} />\r\n              </React.Fragment>\r\n            ) : null}\r\n          </Form>\r\n        </Col>\r\n      </Row >\r\n    </div >\r\n  );\r\n};\r\n\r\nexport default RiskAreaForm;\r\n","import React, { Component } from 'react';\r\nimport { getFormData } from '../../util/form';\r\nimport { addRiskArea } from './api';\r\nimport RiskAreaForm from './RiskAreaForm';\r\n\r\nclass AddRiskArea extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    state = {\r\n        riskAreas: []\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        const form = getFormData(e);\r\n        addRiskArea(form, (err, data) => {\r\n            if (err) return;\r\n            this.props.history.push(\"/risk-areas\")\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <RiskAreaForm\r\n                title=\"Add Risk Area\"\r\n                handleSubmit={this.handleSubmit}\r\n                riskAreas={this.state.riskAreas}\r\n                {...this.props} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddRiskArea;\r\n"],"sourceRoot":""}