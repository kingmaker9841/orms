{"version":3,"sources":["util/form.js","util/api.js","views/RiskAreas/util.js","views/RiskRegister/pagination.js","views/RiskRegister/api.js","views/RiskRegister/util.js","views/RiskRegister/RiskRegisterEditForm.js","views/RiskRegister/RiskRegisterInput.js","views/RiskRegister/Utils/paginate.jsx","views/RiskRegister/Utils/splitKey.jsx"],"names":["getFormData","event","formData","form","target","i","length","element","elements","name","value","type","checked","loadDataInsideForm","object","Object","keys","forEach","key","document","getElementById","getAll","callback","server","get","then","json","data","catch","err","populateLikelihoodTable","riskParticularLikelihoodRules","likelihoodId","rule","filter","l","Number","populateImpactTable","riskParticularImpacts","impactId","imapctRule","populateInstanceLikelihoodTable","riskParticularLikelihood","likelihoodRule","populateInstanceImpactTable","riskParticularImpact","impactRule","splitText","Pagination","itemsCount","pageSize","onPageChange","onPreviousChange","onNextChange","currentPage","className","pageCount","Math","ceil","pages","_","range","Button","onClick","id","disabled","map","page","url","urlData","addRiskRegister","riskRegister","post","getData","list","item","RiskRegisterEditForm","state","register","handleChange","input","props","String","split","join","console","log","setState","handleSubmit","e","preventDefault","splitter","relatedStaff","toString","relatedStaffs","relatedStaff1","relatedStaff2","toggleEdit","moment","tracedDate","isSameOrAfter","transactionDate","put","ex","editRiskRegister","alert","handleOnSelect","result","remark","this","riskTrigger","riskParticulars","tracedBy","registers","occurrence","amountTiming","financialImpact","nonFinancialImpact","relatedAccount","rectificationDate","remarks","Card","CardHeader","Form","onChange","onSubmit","CardBody","Row","Col","FormGroup","Label","for","defaultValue","format","Input","riskParticular","indx","riskAreaParticular","trigger","min","toLocaleString","required","htmlFor","aria-hidden","traced","placeholder","CardFooter","color","size","Component","RiskRegisterDataTable","isEnterData","riskAreaCode","riskRegisters","riskTriggers","riskTracedBy","editRiskArea","editData","selectedRegister","isChecked","branches","baseUnits","date","updateData","history","push","baseUnitId","baseUnit","b","innerText","unit","a","async","riskAreaParticularDetail","code","riskAreaParticularCode","done","window","reset","handleDisable","handleAllSubmit","filtered","r","status","action","submitRiskRegister","location","reload","handleCheckChange","d","handlePageChange","handlePreviousChange","previous","handleNextChange","next","handleSelect","handleParticular","handleDateChange","handleTriggerChange","handleChangeCurrency","riskAreaId","match","params","particulars","particular","p","modifyRiskParticular","count","items","pageNumber","startIndex","slice","take","paginate","permissions","Collapse","isOpen","isEdit","isMaker","Date","toJSON","InputGroup","InputGroupAddon","addonType","style","overflowY","xs","width","elem","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","msRequestFullscreen","Table","responsive","striped","bordered","Boolean","string","fromCharCode","charCodeAt","charAt","splitKey","idx","branchId","createdAt","updatedAt","scroll","scrollTo","isApprover","isChecker"],"mappings":"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","file":"static/js/38.d224c04f.chunk.js","sourcesContent":["const getFormData = event => {\r\n    const formData = {};\r\n    const form = event.target;\r\n    for (let i = 0; i < form.length; i++) {\r\n        const element = form.elements[i];\r\n        const name = element.name;\r\n        const value = element.value;\r\n        const type = element.type;\r\n        if (value) {\r\n            switch (type) {\r\n                case \"checkbox\":\r\n                    formData[name] = element.checked;\r\n                    break;\r\n                default:\r\n                    formData[name] = value;\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n    return formData;\r\n}\r\n\r\nconst loadDataInsideForm = (object) => {\r\n    if (!object) return;\r\n    const keys = Object.keys(object);\r\n    keys.forEach(key => {\r\n        const value = object[key];\r\n        const element = document.getElementById(key);\r\n        if (element) {\r\n            element.checked = value;\r\n            element.value = value;\r\n        }\r\n    });\r\n}\r\n\r\nexport {\r\n    getFormData,\r\n    loadDataInsideForm,\r\n}","import { server } from '../config/server';\r\n\r\nconst getAll = (callback) => {\r\n    server.get('/all')\r\n        .then(json => {\r\n            callback(null, json.data);\r\n        })\r\n        .catch(err => {\r\n            callback(err);\r\n        })\r\n}\r\n\r\n\r\nexport {\r\n    getAll\r\n}","function populateLikelihoodTable(riskParticularLikelihoodRules, likelihoodId) {\r\n  if (riskParticularLikelihoodRules && likelihoodId) {\r\n    const rule = riskParticularLikelihoodRules.filter(l =>\r\n      Number(l.likelihoodId) === likelihoodId ? 1 : 0\r\n    )[0];\r\n    return rule ? rule : {};\r\n  }\r\n  return {};\r\n}\r\n\r\nfunction populateImpactTable(riskParticularImpacts, impactId) {\r\n  if (riskParticularImpacts && impactId) {\r\n    const imapctRule = riskParticularImpacts.filter(l =>\r\n      Number(l.impactId) === impactId ? 1 : 0\r\n    )[0];\r\n    return imapctRule ? imapctRule : {};\r\n  }\r\n  return {}\r\n}\r\n\r\nfunction populateInstanceLikelihoodTable(riskParticularLikelihood, likelihoodId) {\r\n  if (riskParticularLikelihood && likelihoodId) {\r\n    const likelihoodRule = riskParticularLikelihood.filter(l => l.likelihoodId === likelihoodId ? 1 : 0)[0];\r\n    return likelihoodRule ? likelihoodRule : {}\r\n  }\r\n  return {}\r\n}\r\n\r\nfunction populateInstanceImpactTable(riskParticularImpact, impactId) {\r\n  if (riskParticularImpact && impactId) {\r\n    const impactRule = riskParticularImpact.filter(l => l.impactId === impactId ? 1 : 0)[0];\r\n    return impactRule ? impactRule : {}\r\n  }\r\n  return {}\r\n}\r\n\r\nconst splitText = \"|||\"\r\n\r\nexport { populateLikelihoodTable, populateImpactTable, populateInstanceImpactTable, populateInstanceLikelihoodTable, splitText };\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types'\r\nimport { Button } from \"reactstrap\";\r\nimport _ from \"lodash\";\r\n\r\nconst Pagination = ({\r\n  itemsCount,\r\n  pageSize,\r\n  onPageChange,\r\n  onPreviousChange,\r\n  onNextChange,\r\n  currentPage,\r\n  className\r\n}) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize);\r\n  if (pageCount === 1) return null;\r\n  const pages = _.range(1, pageCount + 1);\r\n  return (\r\n    <nav className={className ? className : ''}>\r\n      <ul className=\"pagination\">\r\n        <li className=\"page-item\">\r\n          <Button\r\n            className=\"page-link\"\r\n            onClick={onPreviousChange}\r\n            id=\"previous-state\"\r\n            disabled={currentPage === 1}>\r\n            Previous\r\n          </Button>\r\n        </li>\r\n        {pages.map(page => (\r\n          <li\r\n            key={page}\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}>\r\n            <Button\r\n              className=\"page-link\"\r\n              onClick={() => onPageChange(page)}>\r\n              {page}\r\n            </Button>\r\n          </li>\r\n        ))}\r\n        <li className=\"page-item\">\r\n          <Button\r\n            className=\"page-link\"\r\n            onClick={onNextChange}\r\n            disabled={currentPage === pageCount || currentPage >= pageCount}>\r\n            Next\r\n          </Button>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nPagination.propTypes={\r\n  itemsCount:PropTypes.number.isRequired,\r\n  pageSize:PropTypes.number.isRequired,\r\n  currentPage:PropTypes.number.isRequired,\r\n  onPageChange:PropTypes.func.isRequired,\r\n  onPreviousChange:PropTypes.func.isRequired,\r\n  onNextChange:PropTypes.func.isRequired,\r\n\r\n}\r\n\r\nexport default Pagination;\r\n","import { server } from \"../../config/server\";\r\n\r\nconst url = \"/risk-register\";\r\nconst urlData = \"/risk-register-data\";\r\n\r\nfunction getRiskAreaData(riskAreaId, callback) {\r\n  server\r\n    .get(`${urlData}/${riskAreaId}`)\r\n    .then(function (json) {\r\n      callback(null, json.data);\r\n    })\r\n    .catch(function (err) {\r\n      callback(err);\r\n    });\r\n}\r\n\r\nfunction addRiskRegister(riskRegister, callback) {\r\n  server\r\n    .post(`${url}`, riskRegister)\r\n    .then(function (json) {\r\n      callback(null, json.data);\r\n    })\r\n    .catch(function (err) {\r\n      callback(err);\r\n    });\r\n}\r\n\r\nfunction getRiskRegister(riskRegisterId, callback) {\r\n  server\r\n    .get(`${url}/${riskRegisterId}`)\r\n    .then(function (json) {\r\n      callback(null, json.data);\r\n    })\r\n    .catch(function (err) {\r\n      callback(err);\r\n    });\r\n}\r\n\r\nfunction getRiskRegisters(riskAreaCode, callback) {\r\n  server\r\n    .get(`${url}/${riskAreaCode}`)\r\n    .then(function (json) {\r\n      callback(null, json.data);\r\n    })\r\n    .catch(function (err) {\r\n      callback(err);\r\n    });\r\n}\r\nfunction editRiskRegister(id, data) {\r\n  try {\r\n    server.put(`${url}/${id}`, data)\r\n  }\r\n  catch (ex) {\r\n    // console.log(`Got error editing the data`);\r\n  }\r\n\r\n}\r\n\r\nfunction submitRiskRegister(action, data, callback) {\r\n  try {\r\n    server.post(`${url}/${action}`, { riskRegisters: data }, () => {\r\n      callback(true);\r\n    });\r\n  } catch (ex) {\r\n    // console.log(\"cant post the data in this url\");\r\n    callback(false);\r\n  }\r\n}\r\n\r\n\r\nexport {\r\n  editRiskRegister,\r\n  getRiskAreaData,\r\n  addRiskRegister,\r\n  getRiskRegisters,\r\n  getRiskRegister,\r\n  submitRiskRegister,\r\n\r\n};\r\n","import { splitText } from \"../RiskAreas/util\";\r\n\r\nfunction modifyRiskParticular(riskParticulars) {\r\n    const particulars = [];\r\n    riskParticulars.forEach(particular => {\r\n        particular.name.split(splitText).forEach(p => {\r\n            particulars.push({\r\n                code: particular.code,\r\n                name: p,\r\n                baseUnitId: particular.baseUnitId,\r\n            });\r\n        });\r\n    });\r\n    return particulars;\r\n}\r\n\r\nfunction getData(id, list) {\r\n    const item = list.filter(l => l.id === Number(id) ? 1 : 0)[0];\r\n    return item ? item : \"\";\r\n}\r\n\r\nexport {\r\n    modifyRiskParticular,\r\n    getData,\r\n}","import React, { Component } from \"react\";\r\nimport {\r\n  Label,\r\n  FormGroup,\r\n  Input,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardHeader,\r\n  Form,\r\n  Button,\r\n  CardBody,\r\n  CardFooter\r\n} from \"reactstrap\";\r\nimport { editRiskRegister } from \"./api\";\r\nimport moment from \"moment\";\r\n\r\nclass RiskRegisterEditForm extends Component {\r\n  state = {\r\n    register: {},\r\n    value: \"\"\r\n  };\r\n\r\n  handleChange = ({ target: input }) => {\r\n    const register = this.props.register;\r\n    register[input.name] = String(input.value)\r\n      .split(\",\")\r\n      .join(\"\");\r\n    console.log(register);\r\n\r\n    this.setState({ register });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    const data = this.state.register;\r\n    const splitter = data.relatedStaff\r\n      ? data.relatedStaff.toString().split(\"/\")\r\n      : \"\";\r\n    const relatedStaffs =\r\n      (data.relatedStaff1\r\n        ? data.relatedStaff1\r\n        : splitter[0]\r\n        ? splitter[0]\r\n        : \"\") +\r\n      \"/\" +\r\n      (data.relatedStaff2\r\n        ? data.relatedStaff2\r\n        : splitter[1]\r\n        ? splitter[1]\r\n        : \"\");\r\n\r\n    data.relatedStaff = relatedStaffs;\r\n    this.props.toggleEdit();\r\n    if (moment(data.tracedDate).isSameOrAfter(data.transactionDate, \"day\")) {\r\n      editRiskRegister(this.props.register.id, data);\r\n    } else {\r\n      alert(\"A you sure you traced it after the transaction date !\");\r\n    }\r\n  };\r\n  handleOnSelect = e => {\r\n    const result = e.target.value;\r\n    this.setState({ value: result });\r\n  };\r\n  render() {\r\n    const { register, riskTrigger, riskParticulars, tracedBy } = this.props;\r\n    const registers = register ? register : {};\r\n\r\n    const {\r\n      transactionDate,\r\n      occurrence,\r\n      amountTiming,\r\n      financialImpact,\r\n      nonFinancialImpact,\r\n      relatedAccount,\r\n      rectificationDate,\r\n      relatedStaff,\r\n      tracedDate,\r\n      remarks\r\n    } = registers;\r\n    let remark;\r\n    if (!remarks) {\r\n      remark = \"\";\r\n    } else {\r\n      remark = remarks;\r\n    }\r\n\r\n    const data = relatedStaff ? relatedStaff.toString().split(\"/\") : \"\";\r\n\r\n    return (\r\n      <Card>\r\n        <CardHeader>Edit Risk Register</CardHeader>\r\n        <Form onChange={this.handleChange} onSubmit={this.handleSubmit}>\r\n          <CardBody>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"transactionDate\">Transaction Date</Label>\r\n\r\n                  <input\r\n                    name=\"transactionDate\"\r\n                    id=\"transactionDate\"\r\n                    defaultValue={moment(transactionDate).format(\"YYYY-MM-DD\")}\r\n                    type=\"date\"\r\n                    onChange={this.handleChange}\r\n                    className=\"form-control\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"riskParticular\">\r\n                    Risk Particular(Details of Error)\r\n                  </Label>\r\n\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskParticular\"\r\n                    id=\"riskParticular\"\r\n                    onChange={this.handleOnSelect}\r\n                  >\r\n                    <option value=\"Others\">Others (specify in remarks)</option>\r\n                    {riskParticulars.map((riskParticular, indx) => {\r\n                      return (\r\n                        <option\r\n                          key={indx}\r\n                          defaultValue={\r\n                            register.riskAreaParticular === riskParticular.name\r\n                          }\r\n                        >\r\n                          {riskParticular.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"riskTrigger\">Risk Trigger</Label>\r\n\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"riskTrigger\"\r\n                    id=\"riskTrigger\"\r\n                    onChange={this.handleOnSelect}\r\n                  >\r\n                    <option value=\"Others\">Others (specify in remarks)</option>\r\n                    {riskTrigger.map((trigger, indx) => {\r\n                      return (\r\n                        <option\r\n                          key={indx}\r\n                          defaultValue={register.riskTrigger === trigger.name}\r\n                        >\r\n                          {trigger.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"occurrence\">Occurrence</Label>\r\n\r\n                  <input\r\n                    name=\"occurrence\"\r\n                    id=\"occurrence\"\r\n                    value={occurrence ? occurrence : \"\"}\r\n                    onChange={this.handleChange}\r\n                    className=\"form-control\"\r\n                    type=\"number\"\r\n                    min=\"0\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"amountTiming\">Amount Timing</Label>\r\n\r\n                  <input\r\n                    name=\"amountTiming\"\r\n                    id=\"amountTiming\"\r\n                    value={\r\n                      amountTiming\r\n                        ? Number(amountTiming).toLocaleString(\"en\")\r\n                        : 0\r\n                    }\r\n                    className=\"form-control\"\r\n                    min=\"0\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"financialImpact\">Financial Impact</Label>\r\n\r\n                  <input\r\n                    name=\"financialImpact\"\r\n                    id=\"financialImpact\"\r\n                    value={\r\n                      financialImpact\r\n                        ? Number(financialImpact).toLocaleString(\"en\")\r\n                        : 0\r\n                    }\r\n                    className=\"form-control\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"nonFinancialImpact\">Non Financial Impact</Label>\r\n\r\n                  <input\r\n                    name=\"nonFinancialImpact\"\r\n                    id=\"nonFinancialImpact\"\r\n                    value={nonFinancialImpact}\r\n                    className=\"form-control\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"relatedAccount\">Related Account</Label>\r\n\r\n                  <input\r\n                    name=\"relatedAccount\"\r\n                    id=\"relatedAccount\"\r\n                    value={relatedAccount}\r\n                    className=\"form-control\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <Row>\r\n                  <Col className=\"col-5\">\r\n                    <FormGroup>\r\n                      <Label for=\"relatedStaff1\">Related Staff</Label>\r\n                      <input\r\n                        name=\"relatedStaff1\"\r\n                        id=\"relatedStaff1\"\r\n                        defaultValue={data[0] ? data[0] : \"\"}\r\n                        onChange={this.handleChange}\r\n                        className=\"form-control\"\r\n                        required\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col className=\"col-1 mt-3\">\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"r\"></Label>\r\n\r\n                      <i\r\n                        className=\"fa fa-compress fa-lg\"\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label for=\"relatedStaff2\"></Label>\r\n                      <input\r\n                        name=\"relatedStaff2\"\r\n                        id=\"relatedStaff2\"\r\n                        defaultValue={data[1] ? data[1] : \"\"}\r\n                        onChange={this.handleChange}\r\n                        className=\"form-control mt-2\"\r\n                        required\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </Col>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"tracedDate\">Traced Date</Label>\r\n\r\n                  <input\r\n                    name=\"tracedDate\"\r\n                    id=\"tracedDate\"\r\n                    value={moment(tracedDate).format(\"YYYY-MM-DD\")}\r\n                    type=\"date\"\r\n                    onChange={this.handleChange}\r\n                    className=\"form-control\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"tracedBy\">Risk Traced By</Label>\r\n\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"tracedBy\"\r\n                    id=\"tracedBy\"\r\n                    onChange={this.handleOnSelect}\r\n                  >\r\n                    <option value=\"Others\">Others (specify in remarks)</option>\r\n                    {tracedBy.map((traced, indx) => {\r\n                      return (\r\n                        <option\r\n                          key={indx}\r\n                          defaultValue={register.tracedBy === traced.name}\r\n                        >\r\n                          {traced.name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col>\r\n                <FormGroup>\r\n                  <Label for=\"rectificationDate\">Rectification Date</Label>\r\n\r\n                  <input\r\n                    name=\"rectificationDate\"\r\n                    id=\"rectificationDate\"\r\n                    value={moment(rectificationDate).format(\"YYYY-MM-DD\")}\r\n                    className=\"form-control\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {this.state.value === \"Others\" || this.state.value === \"\" ? (\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"remarks\">Remarks</Label>\r\n                    <input\r\n                      name=\"remarks\"\r\n                      id=\"remarks\"\r\n                      value={remark}\r\n                      className=\"form-control\"\r\n                      placeholder=\"Remark is required !\"\r\n                      onChange={this.handleChange}\r\n                      required\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              ) : (\r\n                <Col>\r\n                  <FormGroup>\r\n                    <Label for=\"remarks\">Remarks</Label>\r\n\r\n                    <input\r\n                      name=\"remarks\"\r\n                      id=\"remarks\"\r\n                      value={remark}\r\n                      onChange={this.handleChange}\r\n                      className=\"form-control\"\r\n                    />\r\n                  </FormGroup>\r\n                </Col>\r\n              )}\r\n            </Row>\r\n          </CardBody>\r\n          <CardFooter>\r\n            <Button color=\"success\" size=\"sm\" type=\"submit\">\r\n              <i className=\"fa fa-circle-o\" />\r\n              Submit\r\n            </Button>\r\n          </CardFooter>\r\n        </Form>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RiskRegisterEditForm;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { splitKey } from \"./Utils/splitKey\";\r\nimport Pagination from \"./pagination\";\r\nimport { paginate } from \"./Utils/paginate\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport {\r\n  getRiskAreaData,\r\n  getRiskRegisters,\r\n  addRiskRegister,\r\n  submitRiskRegister\r\n} from \"./api\";\r\nimport { getAll } from \"../../util/api\";\r\nimport { getFormData } from \"../../util/form\";\r\nimport { modifyRiskParticular, getData } from \"./util\";\r\n// import { VIEW_EDIT, VIEW_EDIT_DELETE } from \"../Roles/util\";\r\nimport RiskRegisterEditForm from \"./RiskRegisterEditForm\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport {\r\n  Table,\r\n  Card,\r\n  InputGroup,\r\n  InputGroupAddon,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  Button,\r\n  Col,\r\n  Row,\r\n  Form,\r\n  Collapse,\r\n  FormGroup,\r\n  Label,\r\n  Input\r\n} from \"reactstrap\";\r\nimport moment from \"moment\";\r\n\r\nconst VIEW_EDIT = \"2\";\r\nconst VIEW_EDIT_DELETE = \"3\";\r\n\r\nclass RiskRegisterDataTable extends Component {\r\n  state = {\r\n    isEnterData: true,\r\n    riskAreaCode: null,\r\n    riskRegisters: [],\r\n    riskParticulars: [],\r\n    riskTriggers: [],\r\n    riskTracedBy: [],\r\n    editRiskArea: [],\r\n    pageSize: 10,\r\n    currentPage: 1,\r\n    editData: [],\r\n    selectedRegister: {},\r\n    isChecked: {},\r\n    branches: [],\r\n    baseUnits: [],\r\n    name: \"\",\r\n    date: \"\",\r\n    trigger: \"\"\r\n  };\r\n\r\n  updateData = () => {\r\n    getRiskRegisters(this.state.riskAreaCode, (err, data) => {\r\n      if (err) this.props.history.push(\"/risk-register\");\r\n      this.setState({\r\n        riskRegisters: data\r\n      });\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const riskAreaCode = this.props.match.params.riskAreaCode;\r\n    this.setState({\r\n      riskAreaCode: riskAreaCode\r\n    }, () => {\r\n      this.updateData();\r\n    });\r\n    getAll((err, data) => {\r\n      if (err) return;\r\n      this.setState({ branches: data.branches, baseUnits: data.baseUnits });\r\n    });\r\n    getRiskAreaData(riskAreaCode, (err, data) => {\r\n      if (err) this.props.history.push(\"/risk-register\");\r\n      try {\r\n        data.riskParticulars = modifyRiskParticular(data.riskParticulars);\r\n        this.setState(data);\r\n      } catch (err) { }\r\n    });\r\n  }\r\n  handleChange = e => {\r\n    switch (e.target.name) {\r\n      case \"riskAreaParticularDetail\":\r\n        const [, , baseUnitId] = e.target.value.split(\"-\");\r\n        const baseUnit = this.state.baseUnits.filter(b =>\r\n          b.id === Number(baseUnitId) ? 1 : 0\r\n        )[0];\r\n        document.getElementById(\"baseUnitLabel\").innerText = baseUnit\r\n          ? baseUnit.unit\r\n          : \"\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n  handleSubmit = async e => {\r\n    e.preventDefault();\r\n    document.getElementById(\"submit-risk-register\").disabled = true;\r\n    const form = await getFormData(e);\r\n    form.riskAreaCode = this.state.riskAreaCode;\r\n    const [name, code, baseUnitId] = form.riskAreaParticularDetail.split(\"-\");\r\n    form.riskAreaParticular = name;\r\n    form.riskAreaParticularCode = code;\r\n    form.amountTiming = form.amountTiming.split(',').join('');\r\n    form.financialImpact = form.financialImpact.split(',').join('');\r\n    form.baseUnitId = baseUnitId;\r\n    form.relatedStaff =\r\n      form.relatedStaff2 && form.relatedStaff1\r\n        ? form.relatedStaff1 + \"/\" + form.relatedStaff2\r\n        : form.relatedStaff1 || form.relatedStaff2;\r\n    if (moment(form.tracedDate).isSameOrAfter(form.transactionDate, \"day\")) {\r\n      addRiskRegister(form, async (err, done) => {\r\n        if (err) {\r\n          window.alert(\"Error!\");\r\n          return;\r\n        }\r\n        try {\r\n          this.updateData();\r\n          document.getElementById(\"create-course-form\").reset();\r\n          document.getElementById(\"submit-risk-register\").disabled = false;\r\n        } catch (ex) {\r\n          window.alert(\"Some exception occurred!\");\r\n        }\r\n      });\r\n    } else {\r\n      document.getElementById(\"submit-risk-register\").disabled = false;\r\n      window.alert(\"A you sure you traced it after the transaction date !\");\r\n    }\r\n  };\r\n  handleDisable = () => {\r\n    return true;\r\n  };\r\n\r\n  handleAllSubmit = e => {\r\n    e.preventDefault();\r\n    const filtered = [];\r\n    this.state.riskRegisters.forEach(r =>\r\n      r.isChecked ? filtered.push({ id: r.id, status: r.status }) : null\r\n    );\r\n    submitRiskRegister(e.target.id, filtered, done => {\r\n      if (!done) window.alert(\"Error!\");\r\n      window.location.reload();\r\n    });\r\n  };\r\n\r\n  //for check list\r\n  handleCheckChange = e => {\r\n    const riskRegisters = this.state.riskRegisters.map((d, i) => {\r\n      if (Number(e.target.name) === i) {\r\n        d.isChecked = e.target.checked;\r\n      }\r\n      return d;\r\n    });\r\n    this.setState({\r\n      riskRegisters: riskRegisters\r\n    });\r\n  };\r\n\r\n  //pagination component\r\n  handlePageChange = page => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n\r\n  //decrement the page number and load the data on that page\r\n  handlePreviousChange = () => {\r\n    const now = this.state.currentPage;\r\n    const previous = now - 1;\r\n    this.setState({ currentPage: previous });\r\n  };\r\n\r\n  //increment the page number and load the data on that page\r\n  handleNextChange = () => {\r\n    const now = this.state.currentPage;\r\n    const next = now + 1;\r\n    this.setState({ currentPage: next });\r\n  };\r\n\r\n  //change state on select\r\n  handleSelect = event => {\r\n    const value = event.target.value;\r\n    this.setState({ pageSize: value });\r\n  };\r\n\r\n  handleParticular = e => {\r\n    const result = e.target.value;\r\n    this.setState({ name: result });\r\n  };\r\n\r\n  handleDateChange = e => {\r\n    this.setState({ date: e.target.value });\r\n  };\r\n  handleTriggerChange = e => {\r\n    this.setState({ trigger: e.target.value });\r\n  };\r\n\r\n  handleChangeCurrency = e => {\r\n    const value = String(e.target.value)\r\n      .split(\",\")\r\n      .join(\"\");\r\n    this.setState({\r\n      [e.target.name]: value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const keys = [\r\n      \"status\",\r\n      \"branch\",\r\n      \"transactionDate\",\r\n      // \"riskAreaParticularCode\",\r\n      \"riskAreaParticular\",\r\n      \"riskTrigger\",\r\n      \"occurrence\",\r\n      \"amountTiming\",\r\n      \"financialImpact\",\r\n      \"nonFinancialImpact\",\r\n      \"relatedAccount\",\r\n      \"relatedStaff\",\r\n      \"tracedDate\",\r\n      \"tracedBy\",\r\n      \"rectificationDate\",\r\n      \"remarks\",\r\n      // \"baseUnitId\",\r\n      \"createdAt\",\r\n      // \"createdBy\",\r\n      // \"editedBy\",\r\n      \"updatedAt\"\r\n    ];\r\n    const { length: count } = this.state.riskRegisters;\r\n    const riskRegisters = paginate(\r\n      this.state.riskRegisters,\r\n      this.state.currentPage,\r\n      this.state.pageSize\r\n    );\r\n    const p = this.props.permissions;\r\n\r\n    return (\r\n      <>\r\n        <Collapse isOpen={this.state.isEdit}>\r\n          <RiskRegisterEditForm\r\n            toggleEdit={() => this.setState({ isEdit: false })}\r\n            tracedBy={this.state.riskTracedBy}\r\n            register={this.state.selectedRegister}\r\n            riskParticulars={this.state.riskParticulars}\r\n            riskTrigger={this.state.riskTriggers}\r\n          />\r\n        </Collapse>\r\n\r\n        <Collapse isOpen={!this.state.isEdit && p.isMaker}>\r\n          <Card>\r\n            <CardHeader>Add Risk Register</CardHeader>\r\n            <Form\r\n              onSubmit={this.handleSubmit}\r\n              onChange={this.handleChange}\r\n              id=\"create-course-form\"\r\n            >\r\n              <CardBody>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"transactionDate\">Transaction Date</Label>\r\n                      <Input\r\n                        required\r\n                        id=\"transactionDate\"\r\n                        defaultValue={new Date().toJSON().slice(0, 15)}\r\n                        name=\"transactionDate\"\r\n                        type=\"date\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"riskAreaParticularDetail\">\r\n                        Risk Particular(Details of Error)\r\n                      </Label>\r\n                      <Input\r\n                        required\r\n                        type=\"select\"\r\n                        id=\"riskAreaParticularDetail\"\r\n                        name=\"riskAreaParticularDetail\"\r\n                        onChange={this.handleParticular}\r\n                      >\r\n                        <option value=\"Others\">\r\n                          Others (specify in remarks)\r\n                        </option>\r\n                        {this.state.riskParticulars.map((particular, i) => {\r\n                          return (\r\n                            <option\r\n                              key={i}\r\n                              value={\r\n                                particular.name +\r\n                                \"-\" +\r\n                                particular.code +\r\n                                \"-\" +\r\n                                particular.baseUnitId\r\n                              }\r\n                            >\r\n                              {particular.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"riskTrigger\">Risk Trigger</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"select\"\r\n                        id=\"riskTrigger\"\r\n                        name=\"riskTrigger\"\r\n                        onChange={this.handleTriggerChange}\r\n                      >\r\n                        <option value=\"Others\">\r\n                          Others (specify in remarks)\r\n                        </option>\r\n                        {this.state.riskTriggers.map((trigger, i) => {\r\n                          return <option key={i}>{trigger.name}</option>;\r\n                        })}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"occurrence\">Occurrence</Label>\r\n                      <Input\r\n                        required\r\n                        id=\"occurrence\"\r\n                        name=\"occurrence\"\r\n                        type=\"number\"\r\n                        min=\"0\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <ToastContainer />\r\n\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"amountTiming\">Amount/Timing</Label>\r\n                      <InputGroup className=\"mb-2\">\r\n                        <Input\r\n                          required\r\n                          id=\"amountTiming\"\r\n                          name=\"amountTiming\"\r\n                          type=\"text\"\r\n                          min=\"0\"\r\n                          value={\r\n                            this.state.amountTiming\r\n                              ? Number(this.state.amountTiming).toLocaleString(\r\n                                \"en\"\r\n                              )\r\n                              : 0\r\n                          }\r\n                          onChange={this.handleChangeCurrency}\r\n                        />\r\n                        <InputGroupAddon addonType=\"append\">\r\n                          <Button\r\n                            color=\"primary\"\r\n                            type=\"button\"\r\n                            id=\"baseUnitLabel\"\r\n                          >\r\n                            rupees\r\n                          </Button>\r\n                        </InputGroupAddon>\r\n                      </InputGroup>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"financialImpact\">Financial Impact</Label>\r\n                      <Input\r\n                        id=\"financialImpact\"\r\n                        name=\"financialImpact\"\r\n                        type=\"text\"\r\n                        min=\"0\"\r\n                        value={\r\n                          this.state.financialImpact\r\n                            ? Number(this.state.financialImpact).toLocaleString(\r\n                              \"en\"\r\n                            )\r\n                            : 0\r\n                        }\r\n                        onChange={this.handleChangeCurrency}\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"nonFinancialImpact\">\r\n                        Non-Financial Impact\r\n                      </Label>\r\n                      <Input\r\n                        id=\"nonFinancialImpact\"\r\n                        name=\"nonFinancialImpact\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"relatedAccount\">Related Account</Label>\r\n                      <Input\r\n                        required\r\n                        id=\"relatedAccount\"\r\n                        name=\"relatedAccount\"\r\n                        min=\"0\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <Row>\r\n                      <Col>\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"relatedStaff1\">Related Staff</Label>\r\n                          <Input\r\n                            required\r\n                            id=\"relatedStaff1\"\r\n                            name=\"relatedStaff1\"\r\n                            placeholder=\"Inputer\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                      <Col className=\"col-1\">\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"r\"></Label>\r\n                        </FormGroup>\r\n                        <i\r\n                          className=\"fa fa-compress fa-lg\"\r\n                          aria-hidden=\"true\"\r\n                        ></i>\r\n                      </Col>\r\n\r\n                      <Col>\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"relatedStaff2\"></Label>\r\n                          <Input\r\n                            id=\"relatedStaff2\"\r\n                            name=\"relatedStaff2\"\r\n                            className=\"mt-2\"\r\n                            placeholder=\"Authorizer\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    </Row>\r\n                  </Col>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"tracedDate\">Traced Date</Label>\r\n                      <Input\r\n                        required\r\n                        id=\"tracedDate\"\r\n                        name=\"tracedDate\"\r\n                        type=\"date\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"tracedBy\">Risk Traced By</Label>\r\n                      <Input\r\n                        required\r\n                        type=\"select\"\r\n                        id=\"tracedBy\"\r\n                        name=\"tracedBy\"\r\n                        onChange={this.handleDateChange}\r\n                      >\r\n                        <option value=\"Others\">\r\n                          Others (specify in remarks)\r\n                        </option>\r\n                        {this.state.riskTracedBy.map((tracedBy, i) => {\r\n                          return <option key={i}>{tracedBy.name}</option>;\r\n                        })}\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n\r\n                  <Col>\r\n                    <FormGroup>\r\n                      <Label htmlFor=\"rectificationDate\">\r\n                        Rectification Date\r\n                      </Label>\r\n\r\n                      <Input\r\n                        id=\"rectificationDate\"\r\n                        name=\"rectificationDate\"\r\n                        type=\"date\"\r\n                      />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  {this.state.name === \"Others\" ||\r\n                    this.state.name === \"\" ||\r\n                    this.state.date === \"Others\" ||\r\n                    this.state.date === \"\" ||\r\n                    this.state.trigger === \"Others\" ||\r\n                    this.state.trigger === \"\" ? (\r\n                      <Col>\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"remarks\">Remarks</Label>\r\n                          <Input\r\n                            required\r\n                            id=\"remarks\"\r\n                            name=\"remarks\"\r\n                            placeholder=\"Remarks is required !\"\r\n                          />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    ) : (\r\n                      <Col>\r\n                        <FormGroup>\r\n                          <Label htmlFor=\"remarks\">Remarks</Label>\r\n                          <Input id=\"remarks\" name=\"remarks\" />\r\n                        </FormGroup>\r\n                      </Col>\r\n                    )}\r\n                </Row>\r\n              </CardBody>\r\n              <CardFooter>\r\n                <Button\r\n                  color=\"success\"\r\n                  type=\"submit\"\r\n                  size=\"sm\"\r\n                  id=\"submit-risk-register\"\r\n                >\r\n                  <i className=\"fa fa-circle-o\" /> Submit\r\n                </Button>\r\n              </CardFooter>\r\n            </Form>\r\n          </Card>\r\n        </Collapse>\r\n\r\n        <Card id=\"risk-register-table\" style={{ overflowY: \"auto\" }}>\r\n          <CardHeader>\r\n            <Row>\r\n              <Col xs={5}>Risk Register</Col>\r\n              <Col xs={6} className=\"float-right\">\r\n                <Label htmlFor=\"select\" className=\"float-right lead\">\r\n                  Risk Register Per Page.\r\n                </Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"select\"\r\n                  style={{ width: \"15%\" }}\r\n                  className=\"float-right\"\r\n                  onClick={this.handleSelect}\r\n                >\r\n                  <option value={5}>5</option>\r\n                  <option value={10}>10</option>\r\n                  <option value={20}>20</option>\r\n                  <option value={30}>30</option>\r\n                  <option value={this.state.riskRegisters.length}>All</option>\r\n                </Input>\r\n                <Label htmlFor=\"select\" className=\"float-right lead\">\r\n                  Show\r\n                </Label>\r\n              </Col>\r\n              <Col xs={1} className=\"float-right\">\r\n                <Button\r\n                  size=\"sm\"\r\n                  onClick={() => {\r\n                    const elem = document.getElementById(\"risk-register-table\");\r\n                    if (elem.requestFullscreen) {\r\n                      elem.requestFullscreen();\r\n                    } else if (elem.mozRequestFullScreen) {\r\n                      /* Firefox */\r\n                      elem.mozRequestFullScreen();\r\n                    } else if (elem.webkitRequestFullscreen) {\r\n                      /* Chrome, Safari and Opera */\r\n                      elem.webkitRequestFullscreen();\r\n                    } else if (elem.msRequestFullscreen) {\r\n                      /* IE/Edge */\r\n                      elem.msRequestFullscreen();\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className=\"fa fa-arrows\" />\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </CardHeader>\r\n          <CardBody>\r\n            <Table responsive striped bordered>\r\n              <thead className=\"mt-0\">\r\n                {\r\n                  <tr>\r\n                    <th>\r\n                      <div className=\"pretty p-icon p-jelly p-round p-bigger\">\r\n                        <Input\r\n                          type=\"checkbox\"\r\n                          onChange={e => {\r\n                            const isChecked = Boolean(e.target.checked);\r\n                            const registers = this.state.riskRegisters.map(\r\n                              d => {\r\n                                d.isChecked = isChecked;\r\n                                return d;\r\n                              }\r\n                            );\r\n                            this.setState({\r\n                              riskRegisters: registers\r\n                            });\r\n                          }}\r\n                        />\r\n                        <div className=\"state p-danger\">\r\n                          <i className=\"icon material-icons\">\r\n                            <i className=\"fa fa-check\" aria-hidden=\"true\"></i>\r\n                          </i>\r\n                          <Label></Label>\r\n                        </div>\r\n                      </div>\r\n                    </th>\r\n                    {keys.map(key => (\r\n                      <th key={key}>{splitKey(key)}</th>\r\n                    ))}\r\n                    <th></th>\r\n                  </tr>\r\n                }\r\n              </thead>\r\n              <tbody>\r\n                {riskRegisters.map((data, idx) => {\r\n                  return (\r\n                    <tr key={idx}>\r\n                      <td>\r\n                        {data.status === \"Draft\" ||\r\n                          data.status === \"Pending\" ? (\r\n                            <div className=\"pretty p-icon p-jelly p-round p-bigger\">\r\n                              <Input\r\n                                type=\"checkbox\"\r\n                                name={idx}\r\n                                checked={data.isChecked ? true : false}\r\n                                onChange={this.handleCheckChange}\r\n                              />\r\n                              <div className=\"state p-danger\">\r\n                                <i className=\"icon material-icons\">\r\n                                  <i\r\n                                    className=\"fa fa-check\"\r\n                                    aria-hidden=\"true\"\r\n                                  ></i>\r\n                                </i>\r\n                                <Label></Label>\r\n                              </div>\r\n                            </div>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                      </td>\r\n                      <td>{data.status}</td>\r\n                      <td>\r\n                        {getData(data.branchId, this.state.branches).name}\r\n                      </td>\r\n                      <td>\r\n                        {moment(data.transactionDate).format(\"YYYY/MM/DD\")}\r\n                      </td>\r\n                      {/* <td>{data.riskAreaParticularCode}</td> */}\r\n                      <td>{data.riskAreaParticular}</td>\r\n                      <td>{data.riskTrigger}</td>\r\n                      <td>{data.occurrence}</td>\r\n                      <td>\r\n                        {data.amountTiming +\r\n                          \" \" +\r\n                          (getData(data.baseUnitId, this.state.baseUnits).unit\r\n                            ? getData(data.baseUnitId, this.state.baseUnits)\r\n                              .unit\r\n                            : \"rupees\")}\r\n                      </td>\r\n                      <td>{data.financialImpact}</td>\r\n                      <td>{data.nonFinancialImpact}</td>\r\n                      <td>{data.relatedAccount}</td>\r\n                      <td>{data.relatedStaff}</td>\r\n                      <td>{moment(data.tracedDate).format(\"YYYY/MM/DD\")}</td>\r\n                      <td>{data.tracedBy}</td>\r\n                      <td>\r\n                        {moment(data.rectificationDate).format(\"YYYY/MM/DD\")}\r\n                      </td>\r\n                      <td>{data.remarks}</td>\r\n                      <td>{moment(data.createdAt).format(\"YYYY/MM/DD\")}</td>\r\n\r\n                      <td>{data.updatedAt}</td>\r\n                      <td>\r\n                        {data.status === \"Draft\" ||\r\n                          (data.status === \"Pending\" &&\r\n                            (p.riskRegister === VIEW_EDIT ||\r\n                              p.riskRegister === VIEW_EDIT_DELETE)) ? (\r\n                            <Button\r\n                              color=\"danger\"\r\n                              size=\"sm\"\r\n                              onClick={() => {\r\n                                scroll.scrollTo(10);\r\n                                this.setState({\r\n                                  isEdit: true,\r\n                                  selectedRegister: data\r\n                                });   // this.setState(prevState => ({\r\n                                //   register: {\r\n                                //     ...prevState.register,\r\n                                //     [prevState.register[e.target.name]]: e.target.value\r\n                                //   }\r\n                                // }));\r\n                              }}\r\n                            >\r\n                              <i className=\"fa fa-edit fa-lg\"></i>\r\n                            </Button>\r\n                          ) : null}\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n            <Pagination\r\n              className=\"mt-3\"\r\n              itemsCount={count}\r\n              pageSize={this.state.pageSize}\r\n              onPageChange={this.handlePageChange}\r\n              currentPage={this.state.currentPage}\r\n              onPreviousChange={this.handlePreviousChange}\r\n              onNextChange={this.handleNextChange}\r\n            />\r\n          </CardBody>\r\n          <CardFooter>\r\n            {p.isApprover ? (\r\n              <Button\r\n                id=\"approve\"\r\n                color=\"info\"\r\n                size=\"sm\"\r\n                className=\"ml-3 text-white\"\r\n                type=\"approve\"\r\n                onClick={this.handleAllSubmit}\r\n              >\r\n                Approve\r\n              </Button>\r\n            ) : null}\r\n            {p.isMaker || p.isChecker ? (\r\n              <Button\r\n                id=\"submit\"\r\n                color=\"info\"\r\n                size=\"sm\"\r\n                className=\"ml-3 text-white\"\r\n                type=\"submit\"\r\n                onClick={this.handleAllSubmit}\r\n              >\r\n                Submit\r\n              </Button>\r\n            ) : null}\r\n            {p.isChecker || p.isApprover ? (\r\n              <Button\r\n                id=\"return\"\r\n                color=\"warning\"\r\n                size=\"sm\"\r\n                className=\"ml-3 text-white\"\r\n                type=\"submit\"\r\n                onClick={this.handleAllSubmit}\r\n              >\r\n                Return\r\n              </Button>\r\n            ) : null}\r\n            {p.riskRegister === VIEW_EDIT_DELETE ? (\r\n              <Button\r\n                id=\"delete\"\r\n                color=\"danger\"\r\n                size=\"sm\"\r\n                className=\"ml-3 text-white\"\r\n                type=\"submit\"\r\n                onClick={this.handleAllSubmit}\r\n              >\r\n                Delete\r\n              </Button>\r\n            ) : null}\r\n          </CardFooter>\r\n        </Card>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default RiskRegisterDataTable;\r\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","export function splitKey(key) {\r\n  let string = String.fromCharCode(Number(key.charCodeAt(0)) - 32);\r\n  for (let i = 1; i < key.length; i++) {\r\n    if (key.charCodeAt(i) < 97) {\r\n      string += \" \";\r\n    }\r\n    string += key.charAt(i);\r\n  }\r\n  return string;\r\n}"],"sourceRoot":""}