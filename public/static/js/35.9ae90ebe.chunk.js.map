{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/RiskAreas/api.js","views/RiskAreas/util.js","views/RiskAreas/RiskAreaCodes.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_slicedToArray","arr","Array","isArray","Symbol","iterator","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","value","err","TypeError","url","getLikelihoodAndImpacts","callback","server","get","then","json","data","catch","getRiskAreas","getRiskAreaCodes","getRiskArea","id","editRiskArea","riskArea","put","editRiskAreaCodes","riskAreaCodes","addRiskArea","post","deleteRiskArea","delete","populateLikelihoodTable","riskParticularLikelihoodRules","likelihoodId","rule","l","Number","populateImpactTable","riskParticularImpacts","impactId","imapctRule","populateInstanceLikelihoodTable","riskParticularLikelihood","likelihoodRule","populateInstanceImpactTable","riskParticularImpact","impactRule","splitText","RiskAreaCodes","state","toggleParticularCodes","map","r","isClosed","setState","handleChange","e","name","split","riskAreaId","riskParticularId","rA","risk_area_particulars","rP","handleSubmit","preventDefault","window","location","reload","className","color","size","onClick","onDoubleClick","this","riskParticulars","Fragment","md","isOpen","style","width","addonType","type","code","onChange","placeholder","required","React","Component"],"mappings":"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","file":"static/js/35.9ae90ebe.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import { server } from '../../config/server';\r\n\r\nconst url = '/risk-areas';\r\n\r\nfunction getLikelihoodAndImpacts(callback) {\r\n    server\r\n        .get(`/likelihood-impact`)\r\n        .then(function (json) {\r\n            callback(null, json.data);\r\n        })\r\n        .catch(function (err) {\r\n            callback(err);\r\n        });\r\n}\r\n\r\nfunction getRiskAreas(callback) {\r\n    server.get(\r\n        `${url}`,\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nfunction getRiskAreaCodes(callback) {\r\n    server.get(\r\n        `${url}/code`,\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nfunction getRiskArea(id, callback) {\r\n    server.get(\r\n        `${url}/${id}`,\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nfunction editRiskArea(riskArea, callback) {\r\n    server.put(\r\n        `${url}/${riskArea.id}`,\r\n        riskArea\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nfunction editRiskAreaCodes(riskAreaCodes, callback) {\r\n    server.put(\r\n        `${url}/code`,\r\n        riskAreaCodes\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nfunction addRiskArea(riskArea, callback) {\r\n    server.post(\r\n        `${url}`,\r\n        riskArea\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nfunction deleteRiskArea(id, callback) {\r\n    server.delete(\r\n        `${url}/${id}`,\r\n    ).then(function (json) {\r\n        callback(null, json.data);\r\n    }).catch(function (err) {\r\n        callback(err);\r\n    });\r\n}\r\n\r\nexport {\r\n    getLikelihoodAndImpacts,\r\n    getRiskArea,\r\n    getRiskAreas,\r\n    getRiskAreaCodes,\r\n    editRiskAreaCodes,\r\n    editRiskArea,\r\n    addRiskArea,\r\n    deleteRiskArea,\r\n}","function populateLikelihoodTable(riskParticularLikelihoodRules, likelihoodId) {\r\n  if (riskParticularLikelihoodRules && likelihoodId) {\r\n    const rule = riskParticularLikelihoodRules.filter(l =>\r\n      Number(l.likelihoodId) === likelihoodId ? 1 : 0\r\n    )[0];\r\n    return rule ? rule : {};\r\n  }\r\n  return {};\r\n}\r\n\r\nfunction populateImpactTable(riskParticularImpacts, impactId) {\r\n  if (riskParticularImpacts && impactId) {\r\n    const imapctRule = riskParticularImpacts.filter(l =>\r\n      Number(l.impactId) === impactId ? 1 : 0\r\n    )[0];\r\n    return imapctRule ? imapctRule : {};\r\n  }\r\n  return {}\r\n}\r\n\r\nfunction populateInstanceLikelihoodTable(riskParticularLikelihood, likelihoodId) {\r\n  if (riskParticularLikelihood && likelihoodId) {\r\n    const likelihoodRule = riskParticularLikelihood.filter(l => l.likelihoodId === likelihoodId ? 1 : 0)[0];\r\n    return likelihoodRule ? likelihoodRule : {}\r\n  }\r\n  return {}\r\n}\r\n\r\nfunction populateInstanceImpactTable(riskParticularImpact, impactId) {\r\n  if (riskParticularImpact && impactId) {\r\n    const impactRule = riskParticularImpact.filter(l => l.impactId === impactId ? 1 : 0)[0];\r\n    return impactRule ? impactRule : {}\r\n  }\r\n  return {}\r\n}\r\n\r\nconst splitText = \"|||\"\r\n\r\nexport { populateLikelihoodTable, populateImpactTable, populateInstanceImpactTable, populateInstanceLikelihoodTable, splitText };\r\n","import React from 'react';\r\nimport { Input, InputGroup, InputGroupAddon, Card, CardHeader, CardBody, CardFooter, Col, Row, Table, Button, Collapse, Form } from 'reactstrap';\r\nimport { getRiskAreaCodes, editRiskAreaCodes } from './api';\r\nimport { splitText } from './util';\r\n\r\nexport default class RiskAreaCodes extends React.Component {\r\n\r\n    state = {\r\n        riskAreaCodes: []\r\n    }\r\n\r\n    toggleParticularCodes = id => {\r\n        const riskAreaCodes = this.state.riskAreaCodes.map(r => {\r\n            switch (id) {\r\n                case \"close\":\r\n                    return { ...r, isClosed: true };\r\n                case \"open\":\r\n                    return { ...r, isClosed: false };\r\n                default:\r\n                    return r.id === id ? { ...r, isClosed: !r.isClosed } : r;\r\n            }\r\n        });\r\n        this.setState({\r\n            riskAreaCodes: riskAreaCodes,\r\n        });\r\n    }\r\n\r\n    handleChange = e => {\r\n        const [name, riskAreaId, riskParticularId] = e.target.name.split('-');\r\n        const value = e.target.value;\r\n        const riskAreaCodes = this.state.riskAreaCodes.map(rA => {\r\n            if (rA.id === Number(riskAreaId)) {\r\n                rA.risk_area_particulars = rA.risk_area_particulars.map(rP => {\r\n                    return rP.id === Number(riskParticularId) ? { ...rP, [name]: value } : rP;\r\n                });\r\n            }\r\n            return rA;\r\n        });\r\n        this.setState({\r\n            riskAreaCodes: riskAreaCodes,\r\n        });\r\n    }\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        editRiskAreaCodes(this.state.riskAreaCodes, (err, json) => {\r\n            if (err) return;\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        getRiskAreaCodes((err, data) => {\r\n            if (err) return;\r\n            this.setState({\r\n                riskAreaCodes: data\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"animate fadeIn\">\r\n                <Card>\r\n                    <Form>\r\n                        <CardHeader>\r\n                            <Row>\r\n                                <Col>\r\n                                    Risk Area Codes\r\n                                </Col>\r\n                                <Col>\r\n                                    <Button color=\"warning\" size=\"sm\"\r\n                                        onClick={() => this.toggleParticularCodes(\"open\")}\r\n                                        onDoubleClick={() => this.toggleParticularCodes(\"close\")}>\r\n                                        <i className=\"fa fa-bars text-white\" />\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </CardHeader>\r\n                        <CardBody>\r\n                            {this.state.riskAreaCodes.map(rA => {\r\n                                const riskParticulars = rA.risk_area_particulars ? rA.risk_area_particulars : [];\r\n                                return (\r\n                                    <React.Fragment key={rA.id}>\r\n                                        <Row className=\"my-2\">\r\n                                            <Col md={6}>\r\n                                                <strong>\r\n                                                    {rA.name}\r\n                                                </strong>\r\n                                            </Col>\r\n                                            <Col md={6}>\r\n                                                <Button color=\"info\" size=\"sm\" onClick={() => this.toggleParticularCodes(rA.id)}>\r\n                                                    <i className=\"fa fa-bars text-white\" />\r\n                                                </Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Collapse isOpen={!rA.isClosed}>\r\n                                            <Table>\r\n                                                <tbody>\r\n                                                    {riskParticulars.map(rP => {\r\n                                                        return (\r\n                                                            <tr key={rP.id}>\r\n                                                                <td style={{ width: 300 }}>\r\n                                                                    <InputGroup className=\"mb-2\">\r\n                                                                        <InputGroupAddon addonType=\"prepend\">\r\n                                                                            <Button color=\"primary\" type=\"button\">\r\n                                                                                Code\r\n                                                                            </Button>\r\n                                                                        </InputGroupAddon>\r\n                                                                        <Input\r\n                                                                            type=\"text\"\r\n                                                                            className=\"font-italic\"\r\n                                                                            name={\"code-\" + rA.id + \"-\" + rP.id}\r\n                                                                            value={rP.code ? rP.code : \"\"}\r\n                                                                            onChange={this.handleChange}\r\n                                                                            placeholder=\"Enter Risk Particular Code\"\r\n                                                                            required />\r\n                                                                    </InputGroup>\r\n                                                                </td>\r\n                                                                <td>\r\n                                                                    {rP.name.split(splitText).map((name, i) => {\r\n                                                                        return (\r\n                                                                            <React.Fragment key={i}>\r\n                                                                                <span>\r\n                                                                                    {name}\r\n                                                                                </span>\r\n                                                                                <br />\r\n                                                                            </React.Fragment>\r\n                                                                        )\r\n                                                                    })}\r\n                                                                </td>\r\n                                                            </tr>\r\n                                                        )\r\n                                                    })}\r\n                                                </tbody>\r\n                                            </Table>\r\n                                        </Collapse>\r\n                                    </React.Fragment>\r\n                                )\r\n                            })}\r\n                        </CardBody>\r\n                        <CardFooter>\r\n                            <Button color=\"success\" size=\"sm\" onClick={this.handleSubmit} type=\"submit\">\r\n                                <i className=\"fa fa-dot-circle-o\" /> Submit\r\n                        </Button>\r\n                        </CardFooter>\r\n                    </Form>\r\n                </Card>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}"],"sourceRoot":""}